{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "redeem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/ERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/ERC20.sol",
    "exportedSymbols": {
      "ERC20": [
        344
      ]
    },
    "id": 345,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 344,
        "linearizedBaseContracts": [
          344
        ],
        "name": "ERC20",
        "nameLocation": "73:5:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "18160ddd",
            "id": 3,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "100:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 344,
            "src": "85:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "85:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 5,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "131:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 344,
            "src": "117:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "117:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "95d89b41",
            "id": 7,
            "mutability": "mutable",
            "name": "symbol",
            "nameLocation": "155:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 344,
            "src": "141:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 6,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "141:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "id": 15,
            "name": "Transfer",
            "nameLocation": "174:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "199:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "183:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "183:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "222:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "206:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "206:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "235:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "227:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "182:59:0"
            },
            "src": "168:74:0"
          },
          {
            "anonymous": false,
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "id": 23,
            "name": "Approval",
            "nameLocation": "253:8:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "287:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "271:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "271:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "318:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "302:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "302:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "343:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "335:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "261:93:0"
            },
            "src": "247:108:0"
          },
          {
            "constant": false,
            "functionSelector": "70a08231",
            "id": 27,
            "mutability": "mutable",
            "name": "balanceOf",
            "nameLocation": "396:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 344,
            "src": "361:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 26,
              "keyType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "369:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "361:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 25,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "380:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dd62ed3e",
            "id": 33,
            "mutability": "mutable",
            "name": "allowance",
            "nameLocation": "466:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 344,
            "src": "411:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 32,
              "keyType": {
                "id": 28,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "419:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "411:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 31,
                "keyType": {
                  "id": 29,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "438:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "430:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 30,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "449:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 54,
              "nodeType": "Block",
              "src": "538:91:0",
              "statements": [
                {
                  "expression": {
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "548:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "555:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "548:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "548:12:0"
                },
                {
                  "expression": {
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "570:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 45,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "579:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "570:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "570:16:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 49,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "603:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "603:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "615:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 48,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "597:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "597:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "597:25:0"
                }
              ]
            },
            "id": 55,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 35,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "508:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "494:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "494:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "529:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 55,
                  "src": "515:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "515:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "493:44:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:0:0"
            },
            "scope": 344,
            "src": "482:147:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 62,
              "nodeType": "Block",
              "src": "685:26:0",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "702:2:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 59,
                  "id": 61,
                  "nodeType": "Return",
                  "src": "695:9:0"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 63,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "644:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "652:2:0"
            },
            "returnParameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 63,
                  "src": "678:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "677:7:0"
            },
            "scope": 344,
            "src": "635:76:0",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "814:64:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 73,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "841:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 74,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "841:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 75,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "853:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 76,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67,
                        "src": "864:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 72,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "831:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "831:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 71,
                  "id": 78,
                  "nodeType": "Return",
                  "src": "824:47:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "726:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "743:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "735:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "735:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "762:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "754:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "734:35:0"
            },
            "returnParameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "804:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "803:6:0"
            },
            "scope": 344,
            "src": "717:161:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 131,
              "nodeType": "Block",
              "src": "1009:371:0",
              "statements": [
                {
                  "assignments": [
                    92
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 92,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "1027:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 131,
                      "src": "1019:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 91,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1019:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 93,
                        "name": "allowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33,
                        "src": "1046:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 95,
                      "indexExpression": {
                        "id": 94,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1056:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1046:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 98,
                    "indexExpression": {
                      "expression": {
                        "id": 96,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1064:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 97,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1064:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1046:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1019:56:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 92,
                          "src": "1107:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 102,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86,
                          "src": "1127:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1107:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                        "id": 104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1147:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        },
                        "value": "ERC20: transfer amount exceeds allowance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                        }
                      ],
                      "id": 100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1086:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1086:113:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 106,
                  "nodeType": "ExpressionStatement",
                  "src": "1086:113:0"
                },
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 107,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1210:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 111,
                        "indexExpression": {
                          "id": 108,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 82,
                          "src": "1220:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1210:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 112,
                      "indexExpression": {
                        "expression": {
                          "id": 109,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1228:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1228:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1210:29:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 113,
                        "name": "currentAllowance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 92,
                        "src": "1242:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 114,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1261:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1242:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1210:57:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1210:57:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 119,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1292:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 120,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1300:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1300:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 122,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1312:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 118,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1283:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "EmitStatement",
                  "src": "1278:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 126,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1347:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 127,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84,
                        "src": "1355:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 128,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86,
                        "src": "1366:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 125,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "1337:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1337:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 90,
                  "id": 130,
                  "nodeType": "Return",
                  "src": "1330:43:0"
                }
              ]
            },
            "functionSelector": "23b872dd",
            "id": 132,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "893:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 82,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "923:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "915:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "915:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "947:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "939:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "974:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "966:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 85,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "966:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "905:81:0"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 132,
                  "src": "1003:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1002:6:0"
            },
            "scope": 344,
            "src": "884:496:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "1460:209:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 142,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 134,
                          "src": "1478:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1497:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1489:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 143,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1489:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1489:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1478:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1501:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1470:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1470:68:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1470:68:0"
                },
                {
                  "expression": {
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 151,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "1549:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 155,
                        "indexExpression": {
                          "expression": {
                            "id": 152,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1559:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1559:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1549:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 156,
                      "indexExpression": {
                        "id": 154,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "1571:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1549:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 157,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 136,
                      "src": "1582:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1549:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "1549:39:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 161,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1613:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1613:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 163,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "1625:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 164,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136,
                        "src": "1634:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 160,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1604:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1604:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "EmitStatement",
                  "src": "1599:42:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1658:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 140,
                  "id": 168,
                  "nodeType": "Return",
                  "src": "1651:11:0"
                }
              ]
            },
            "functionSelector": "095ea7b3",
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "1395:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1411:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1403:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1428:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1420:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1420:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1402:33:0"
            },
            "returnParameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "1454:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1453:6:0"
            },
            "scope": 344,
            "src": "1386:283:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "1798:420:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 182,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 174,
                          "src": "1816:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1837:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1829:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 183,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1829:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1829:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1816:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f207a65726f2061646472657373",
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1841:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_593b493ab8c2bec350c206dc58fc75ffac084af98edec4f38464690d86293c00",
                          "typeString": "literal_string \"ERC20: transfer to zero address\""
                        },
                        "value": "ERC20: transfer to zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_593b493ab8c2bec350c206dc58fc75ffac084af98edec4f38464690d86293c00",
                          "typeString": "literal_string \"ERC20: transfer to zero address\""
                        }
                      ],
                      "id": 181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1808:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1808:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "1808:67:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 192,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "1899:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 193,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "1907:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 194,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "1918:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 191,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1890:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1890:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 196,
                  "nodeType": "EmitStatement",
                  "src": "1885:40:0"
                },
                {
                  "assignments": [
                    198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 198,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "1944:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 226,
                      "src": "1936:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 197,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1936:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 202,
                  "initialValue": {
                    "baseExpression": {
                      "id": 199,
                      "name": "balanceOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1960:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 201,
                    "indexExpression": {
                      "id": 200,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "1970:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1960:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1936:41:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 204,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "2009:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 205,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 176,
                          "src": "2026:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2009:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2046:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1988:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1988:108:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "1988:108:0"
                },
                {
                  "expression": {
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 210,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2107:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 212,
                      "indexExpression": {
                        "id": 211,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 172,
                        "src": "2117:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2107:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 213,
                        "name": "senderBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "2127:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 214,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 176,
                        "src": "2143:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2127:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2107:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "2107:42:0"
                },
                {
                  "expression": {
                    "id": 222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 218,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2159:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 220,
                      "indexExpression": {
                        "id": 219,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "2169:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2159:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 221,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "2183:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2159:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 223,
                  "nodeType": "ExpressionStatement",
                  "src": "2159:30:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2207:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 180,
                  "id": 225,
                  "nodeType": "Return",
                  "src": "2200:11:0"
                }
              ]
            },
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "1684:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1711:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "1703:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1703:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1735:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "1727:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 176,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1762:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "1754:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1693:81:0"
            },
            "returnParameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 179,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "1792:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1792:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1791:6:0"
            },
            "scope": 344,
            "src": "1675:543:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 263,
              "nodeType": "Block",
              "src": "2276:190:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 235,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 229,
                          "src": "2294:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2308:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 237,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2300:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 236,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2300:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2300:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2294:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2312:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2286:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2286:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 243,
                  "nodeType": "ExpressionStatement",
                  "src": "2286:60:0"
                },
                {
                  "expression": {
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 244,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "2357:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 245,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "2372:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2357:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "2357:21:0"
                },
                {
                  "expression": {
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 248,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2388:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 250,
                      "indexExpression": {
                        "id": 249,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "2398:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2388:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 251,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "2405:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2388:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:23:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2444:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2436:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 255,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2436:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2436:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 259,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 229,
                        "src": "2448:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 260,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "2452:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 254,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2427:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2427:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 262,
                  "nodeType": "EmitStatement",
                  "src": "2422:37:0"
                }
              ]
            },
            "id": 264,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "2233:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 229,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2247:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "2239:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 228,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2239:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2259:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "2251:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2251:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2238:28:0"
            },
            "returnParameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2276:0:0"
            },
            "scope": 344,
            "src": "2224:242:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 300,
              "nodeType": "Block",
              "src": "2528:203:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 272,
                          "name": "burner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "2546:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2564:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2556:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 273,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2556:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2556:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2546:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2568:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2538:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2538:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "2538:66:0"
                },
                {
                  "expression": {
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 281,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "2615:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 282,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "2630:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2615:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "2615:21:0"
                },
                {
                  "expression": {
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 285,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "2646:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 287,
                      "indexExpression": {
                        "id": 286,
                        "name": "burner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "2656:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2646:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 288,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "2667:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2646:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "2646:27:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 292,
                        "name": "burner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "2697:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2713:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2705:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 293,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2705:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2705:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 297,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "2717:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 291,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2688:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2688:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 299,
                  "nodeType": "EmitStatement",
                  "src": "2683:41:0"
                }
              ]
            },
            "id": 301,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "2481:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "burner",
                  "nameLocation": "2495:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "2487:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2511:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 301,
                  "src": "2503:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2503:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2486:32:0"
            },
            "returnParameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2528:0:0"
            },
            "scope": 344,
            "src": "2472:259:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 322,
              "nodeType": "Block",
              "src": "2785:100:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 307,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2801:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2801:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 309,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "2813:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 306,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "2795:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2795:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "2795:25:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 313,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2844:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2844:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 317,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2864:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$344",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$344",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2856:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 315,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2856:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2856:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 319,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 303,
                        "src": "2871:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 312,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "2835:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2835:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "EmitStatement",
                  "src": "2830:48:0"
                }
              ]
            },
            "functionSelector": "b6b55f25",
            "id": 323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "2746:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 303,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2762:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "2754:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2754:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2753:16:0"
            },
            "returnParameters": {
              "id": 305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2785:0:0"
            },
            "scope": 344,
            "src": "2737:148:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 342,
              "nodeType": "Block",
              "src": "2940:96:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 329,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2963:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2963:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 331,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2975:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2975:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 333,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "2987:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 328,
                      "name": "transferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 132,
                      "src": "2950:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2950:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 335,
                  "nodeType": "ExpressionStatement",
                  "src": "2950:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 337,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3010:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3010:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 339,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 325,
                        "src": "3022:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 336,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 301,
                      "src": "3004:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3004:25:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "3004:25:0"
                }
              ]
            },
            "functionSelector": "db006a75",
            "id": 343,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "2900:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 325,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2915:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 343,
                  "src": "2907:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2907:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2906:16:0"
            },
            "returnParameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2940:0:0"
            },
            "scope": 344,
            "src": "2891:145:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 345,
        "src": "64:2974:0",
        "usedErrors": []
      }
    ],
    "src": "31:3008:0"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162000da638038062000da68339810160408190526200003491620002d7565b81516200004990600190602085019062000164565b5080516200005f90600290602084019062000164565b50620000753368056bc75e2d631000006200007d565b5050620003a4565b6001600160a01b038216620000d85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600080828254620000eb919062000341565b90915550506001600160a01b038216600090815260036020526040812080548392906200011a90849062000341565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620001729062000368565b90600052602060002090601f016020900481019282620001965760008555620001e1565b82601f10620001b157805160ff1916838001178555620001e1565b82800160010185558215620001e1579182015b82811115620001e1578251825591602001919060010190620001c4565b50620001ef929150620001f3565b5090565b5b80821115620001ef5760008155600101620001f4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200023257600080fd5b81516001600160401b03808211156200024f576200024f6200020a565b604051601f8301601f19908116603f011681019082821181831017156200027a576200027a6200020a565b816040528381526020925086838588010111156200029757600080fd5b600091505b83821015620002bb57858201830151818301840152908201906200029c565b83821115620002cd5760008385830101525b9695505050505050565b60008060408385031215620002eb57600080fd5b82516001600160401b03808211156200030357600080fd5b620003118683870162000220565b935060208501519150808211156200032857600080fd5b50620003378582860162000220565b9150509250929050565b600082198211156200036357634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200037d57607f821691505b6020821081036200039e57634e487b7160e01b600052602260045260246000fd5b50919050565b6109f280620003b46000396000f3fe60806040526004361061009c5760003560e01c806370a082311161006457806370a082311461015c57806395d89b4114610189578063a9059cbb1461019e578063b6b55f25146101be578063db006a75146101d3578063dd62ed3e146101e657600080fd5b806306fdde03146100a1578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd14610120578063313ce56714610140575b600080fd5b3480156100ad57600080fd5b506100b661021e565b6040516100c391906107df565b60405180910390f35b3480156100d857600080fd5b506100ec6100e7366004610850565b6102ac565b60405190151581526020016100c3565b34801561010857600080fd5b5061011260005481565b6040519081526020016100c3565b34801561012c57600080fd5b506100ec61013b36600461087a565b610378565b34801561014c57600080fd5b50604051601281526020016100c3565b34801561016857600080fd5b506101126101773660046108b6565b60036020526000908152604090205481565b34801561019557600080fd5b506100b661047c565b3480156101aa57600080fd5b506100ec6101b9366004610850565b610489565b6101d16101cc3660046108d1565b61049d565b005b6101d16101e13660046108d1565b6104cf565b3480156101f257600080fd5b506101126102013660046108ea565b600460209081526000928352604080842090915290825290205481565b6001805461022b9061091d565b80601f01602080910402602001604051908101604052809291908181526020018280546102579061091d565b80156102a45780601f10610279576101008083540402835291602001916102a4565b820191906000526020600020905b81548152906001019060200180831161028757829003601f168201915b505050505081565b60006001600160a01b0383166103145760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084015b60405180910390fd5b3360008181526004602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350600192915050565b6001600160a01b0383166000908152600460209081526040808320338452909152812054828110156103fd5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161030b565b610407838261096d565b6001600160a01b03861660008181526004602090815260408083203380855292529182902093909355517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104609087815260200190565b60405180910390a36104738585856104e8565b95945050505050565b6002805461022b9061091d565b60006104963384846104e8565b9392505050565b6104a73382610643565b6040518181523090339060008051602061099d8339815191529060200160405180910390a350565b6104da333383610378565b506104e53382610710565b50565b60006001600160a01b0383166105405760405162461bcd60e51b815260206004820152601f60248201527f45524332303a207472616e7366657220746f207a65726f206164647265737300604482015260640161030b565b826001600160a01b0316846001600160a01b031660008051602061099d8339815191528460405161057391815260200190565b60405180910390a36001600160a01b038416600090815260036020526040902054828110156105f35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6105fd838261096d565b6001600160a01b038087166000908152600360205260408082209390935590861681529081208054859290610633908490610984565b9091555060019695505050505050565b6001600160a01b0382166106995760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161030b565b806000808282546106aa9190610984565b90915550506001600160a01b038216600090815260036020526040812080548392906106d7908490610984565b90915550506040518181526001600160a01b0383169060009060008051602061099d833981519152906020015b60405180910390a35050565b6001600160a01b0382166107705760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161030b565b80600080828254610781919061096d565b90915550506001600160a01b038216600090815260036020526040812080548392906107ae90849061096d565b90915550506040518181526000906001600160a01b0384169060008051602061099d83398151915290602001610704565b600060208083528351808285015260005b8181101561080c578581018301518582016040015282016107f0565b8181111561081e576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461084b57600080fd5b919050565b6000806040838503121561086357600080fd5b61086c83610834565b946020939093013593505050565b60008060006060848603121561088f57600080fd5b61089884610834565b92506108a660208501610834565b9150604084013590509250925092565b6000602082840312156108c857600080fd5b61049682610834565b6000602082840312156108e357600080fd5b5035919050565b600080604083850312156108fd57600080fd5b61090683610834565b915061091460208401610834565b90509250929050565b600181811c9082168061093157607f821691505b60208210810361095157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561097f5761097f610957565b500390565b6000821982111561099757610997610957565b50019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220e50838a01e55eff6a3443c1e79f02ee1bcafa2211c735f84a15430e746bf49e164736f6c634300080e0033",
  "bytecodeSha1": "5b993d52d116ff11c027c218af95be329f80b4e2",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "0": {
        "ERC20._burn": {
          "33": [
            2546,
            2566,
            true
          ]
        },
        "ERC20._mint": {
          "32": [
            2294,
            2310,
            true
          ]
        },
        "ERC20._transfer": {
          "30": [
            1816,
            1839,
            true
          ],
          "31": [
            2009,
            2032,
            true
          ]
        },
        "ERC20.approve": {
          "28": [
            1478,
            1499,
            true
          ]
        },
        "ERC20.transferFrom": {
          "29": [
            1107,
            1133,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "ERC20._burn": {
          "24": [
            2538,
            2604
          ],
          "25": [
            2615,
            2636
          ],
          "26": [
            2646,
            2673
          ],
          "27": [
            2683,
            2724
          ]
        },
        "ERC20._mint": {
          "20": [
            2286,
            2346
          ],
          "21": [
            2357,
            2378
          ],
          "22": [
            2388,
            2411
          ],
          "23": [
            2422,
            2459
          ]
        },
        "ERC20._transfer": {
          "14": [
            1808,
            1875
          ],
          "15": [
            1885,
            1925
          ],
          "16": [
            1988,
            2096
          ],
          "17": [
            2107,
            2149
          ],
          "18": [
            2159,
            2189
          ],
          "19": [
            2200,
            2211
          ]
        },
        "ERC20.approve": {
          "1": [
            1470,
            1538
          ],
          "2": [
            1549,
            1588
          ],
          "3": [
            1599,
            1641
          ],
          "4": [
            1651,
            1662
          ]
        },
        "ERC20.decimals": {
          "0": [
            695,
            704
          ]
        },
        "ERC20.deposit": {
          "10": [
            2795,
            2820
          ],
          "11": [
            2830,
            2878
          ]
        },
        "ERC20.redeem": {
          "12": [
            2950,
            2994
          ],
          "13": [
            3004,
            3029
          ]
        },
        "ERC20.transfer": {
          "9": [
            824,
            871
          ]
        },
        "ERC20.transferFrom": {
          "5": [
            1086,
            1199
          ],
          "6": [
            1210,
            1267
          ],
          "7": [
            1278,
            1319
          ],
          "8": [
            1330,
            1373
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "60806040526004361061009c5760003560e01c806370a082311161006457806370a082311461015c57806395d89b4114610189578063a9059cbb1461019e578063b6b55f25146101be578063db006a75146101d3578063dd62ed3e146101e657600080fd5b806306fdde03146100a1578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd14610120578063313ce56714610140575b600080fd5b3480156100ad57600080fd5b506100b661021e565b6040516100c391906107df565b60405180910390f35b3480156100d857600080fd5b506100ec6100e7366004610850565b6102ac565b60405190151581526020016100c3565b34801561010857600080fd5b5061011260005481565b6040519081526020016100c3565b34801561012c57600080fd5b506100ec61013b36600461087a565b610378565b34801561014c57600080fd5b50604051601281526020016100c3565b34801561016857600080fd5b506101126101773660046108b6565b60036020526000908152604090205481565b34801561019557600080fd5b506100b661047c565b3480156101aa57600080fd5b506100ec6101b9366004610850565b610489565b6101d16101cc3660046108d1565b61049d565b005b6101d16101e13660046108d1565b6104cf565b3480156101f257600080fd5b506101126102013660046108ea565b600460209081526000928352604080842090915290825290205481565b6001805461022b9061091d565b80601f01602080910402602001604051908101604052809291908181526020018280546102579061091d565b80156102a45780601f10610279576101008083540402835291602001916102a4565b820191906000526020600020905b81548152906001019060200180831161028757829003601f168201915b505050505081565b60006001600160a01b0383166103145760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084015b60405180910390fd5b3360008181526004602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350600192915050565b6001600160a01b0383166000908152600460209081526040808320338452909152812054828110156103fd5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b606482015260840161030b565b610407838261096d565b6001600160a01b03861660008181526004602090815260408083203380855292529182902093909355517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104609087815260200190565b60405180910390a36104738585856104e8565b95945050505050565b6002805461022b9061091d565b60006104963384846104e8565b9392505050565b6104a73382610643565b6040518181523090339060008051602061099d8339815191529060200160405180910390a350565b6104da333383610378565b506104e53382610710565b50565b60006001600160a01b0383166105405760405162461bcd60e51b815260206004820152601f60248201527f45524332303a207472616e7366657220746f207a65726f206164647265737300604482015260640161030b565b826001600160a01b0316846001600160a01b031660008051602061099d8339815191528460405161057391815260200190565b60405180910390a36001600160a01b038416600090815260036020526040902054828110156105f35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6105fd838261096d565b6001600160a01b038087166000908152600360205260408082209390935590861681529081208054859290610633908490610984565b9091555060019695505050505050565b6001600160a01b0382166106995760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161030b565b806000808282546106aa9190610984565b90915550506001600160a01b038216600090815260036020526040812080548392906106d7908490610984565b90915550506040518181526001600160a01b0383169060009060008051602061099d833981519152906020015b60405180910390a35050565b6001600160a01b0382166107705760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161030b565b80600080828254610781919061096d565b90915550506001600160a01b038216600090815260036020526040812080548392906107ae90849061096d565b90915550506040518181526000906001600160a01b0384169060008051602061099d83398151915290602001610704565b600060208083528351808285015260005b8181101561080c578581018301518582016040015282016107f0565b8181111561081e576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461084b57600080fd5b919050565b6000806040838503121561086357600080fd5b61086c83610834565b946020939093013593505050565b60008060006060848603121561088f57600080fd5b61089884610834565b92506108a660208501610834565b9150604084013590509250925092565b6000602082840312156108c857600080fd5b61049682610834565b6000602082840312156108e357600080fd5b5035919050565b600080604083850312156108fd57600080fd5b61090683610834565b915061091460208401610834565b90509250929050565b600181811c9082168061093157607f821691505b60208210810361095157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561097f5761097f610957565b500390565b6000821982111561099757610997610957565b50019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220e50838a01e55eff6a3443c1e79f02ee1bcafa2211c735f84a15430e746bf49e164736f6c634300080e0033",
  "deployedSourceMap": "64:2974:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;117:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1386:283;;;;;;;;;;-1:-1:-1;1386:283:0;;;;;:::i;:::-;;:::i;:::-;;;1218:14:1;;1211:22;1193:41;;1181:2;1166:18;1386:283:0;1053:187:1;85:26:0;;;;;;;;;;;;;;;;;;;1391:25:1;;;1379:2;1364:18;85:26:0;1245:177:1;884:496:0;;;;;;;;;;-1:-1:-1;884:496:0;;;;;:::i;:::-;;:::i;635:76::-;;;;;;;;;;-1:-1:-1;635:76:0;;702:2;1902:36:1;;1890:2;1875:18;635:76:0;1760:184:1;361:44:0;;;;;;;;;;-1:-1:-1;361:44:0;;;;;:::i;:::-;;;;;;;;;;;;;;141:20;;;;;;;;;;;;;:::i;717:161::-;;;;;;;;;;-1:-1:-1;717:161:0;;;;;:::i;:::-;;:::i;2737:148::-;;;;;;:::i;:::-;;:::i;:::-;;2891:145;;;;;;:::i;:::-;;:::i;411:64::-;;;;;;;;;;-1:-1:-1;411:64:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;117:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1386:283::-;1454:4;-1:-1:-1;;;;;1478:21:0;;1470:68;;;;-1:-1:-1;;;1470:68:0;;3177:2:1;1470:68:0;;;3159:21:1;3216:2;3196:18;;;3189:30;3255:34;3235:18;;;3228:62;-1:-1:-1;;;3306:18:1;;;3299:32;3348:19;;1470:68:0;;;;;;;;;1559:10;1549:21;;;;:9;:21;;;;;;;;-1:-1:-1;;;;;1549:30:0;;;;;;;;;;;;:39;;;1604:37;1391:25:1;;;1549:30:0;;1559:10;1604:37;;1364:18:1;1604:37:0;;;;;;;-1:-1:-1;1658:4:0;1386:283;;;;:::o;884:496::-;-1:-1:-1;;;;;1046:17:0;;1003:4;1046:17;;;:9;:17;;;;;;;;1064:10;1046:29;;;;;;;;1107:26;;;;1086:113;;;;-1:-1:-1;;;1086:113:0;;3580:2:1;1086:113:0;;;3562:21:1;3619:2;3599:18;;;3592:30;3658:34;3638:18;;;3631:62;-1:-1:-1;;;3709:18:1;;;3702:38;3757:19;;1086:113:0;3378:404:1;1086:113:0;1242:25;1261:6;1242:16;:25;:::i;:::-;-1:-1:-1;;;;;1210:17:0;;;;;;:9;:17;;;;;;;;1228:10;1210:29;;;;;;;;;:57;;;;1283:36;;;;;1312:6;1391:25:1;;1379:2;1364:18;;1245:177;1283:36:0;;;;;;;;1337;1347:6;1355:9;1366:6;1337:9;:36::i;:::-;1330:43;884:496;-1:-1:-1;;;;;884:496:0:o;141:20::-;;;;;;;:::i;717:161::-;804:4;831:40;841:10;853:9;864:6;831:9;:40::i;:::-;824:47;717:161;-1:-1:-1;;;717:161:0:o;2737:148::-;2795:25;2801:10;2813:6;2795:5;:25::i;:::-;2835:43;;1391:25:1;;;2864:4:0;;2844:10;;-1:-1:-1;;;;;;;;;;;2835:43:0;1379:2:1;1364:18;2835:43:0;;;;;;;2737:148;:::o;2891:145::-;2950:44;2963:10;2975;2987:6;2950:12;:44::i;:::-;;3004:25;3010:10;3022:6;3004:5;:25::i;:::-;2891:145;:::o;1675:543::-;1792:4;-1:-1:-1;;;;;1816:23:0;;1808:67;;;;-1:-1:-1;;;1808:67:0;;4251:2:1;1808:67:0;;;4233:21:1;4290:2;4270:18;;;4263:30;4329:33;4309:18;;;4302:61;4380:18;;1808:67:0;4049:355:1;1808:67:0;1907:9;-1:-1:-1;;;;;1890:35:0;1899:6;-1:-1:-1;;;;;1890:35:0;-1:-1:-1;;;;;;;;;;;1918:6:0;1890:35;;;;1391:25:1;;1379:2;1364:18;;1245:177;1890:35:0;;;;;;;;-1:-1:-1;;;;;1960:17:0;;1936:21;1960:17;;;:9;:17;;;;;;2009:23;;;;1988:108;;;;-1:-1:-1;;;1988:108:0;;4611:2:1;1988:108:0;;;4593:21:1;4650:2;4630:18;;;4623:30;4689:34;4669:18;;;4662:62;-1:-1:-1;;;4740:18:1;;;4733:36;4786:19;;1988:108:0;4409:402:1;1988:108:0;2127:22;2143:6;2127:13;:22;:::i;:::-;-1:-1:-1;;;;;2107:17:0;;;;;;;:9;:17;;;;;;:42;;;;2159:20;;;;;;;;:30;;2183:6;;2107:17;2159:30;;2183:6;;2159:30;:::i;:::-;;;;-1:-1:-1;2207:4:0;;1675:543;-1:-1:-1;;;;;;1675:543:0:o;2224:242::-;-1:-1:-1;;;;;2294:16:0;;2286:60;;;;-1:-1:-1;;;2286:60:0;;5151:2:1;2286:60:0;;;5133:21:1;5190:2;5170:18;;;5163:30;5229:33;5209:18;;;5202:61;5280:18;;2286:60:0;4949:355:1;2286:60:0;2372:6;2357:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;2388:13:0;;;;;;:9;:13;;;;;:23;;2405:6;;2388:13;:23;;2405:6;;2388:23;:::i;:::-;;;;-1:-1:-1;;2427:32:0;;1391:25:1;;;-1:-1:-1;;;;;2427:32:0;;;2444:1;;-1:-1:-1;;;;;;;;;;;2427:32:0;1379:2:1;1364:18;2427:32:0;;;;;;;;2224:242;;:::o;2472:259::-;-1:-1:-1;;;;;2546:20:0;;2538:66;;;;-1:-1:-1;;;2538:66:0;;5511:2:1;2538:66:0;;;5493:21:1;5550:2;5530:18;;;5523:30;5589:34;5569:18;;;5562:62;-1:-1:-1;;;5640:18:1;;;5633:31;5681:19;;2538:66:0;5309:397:1;2538:66:0;2630:6;2615:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;2646:17:0;;;;;;:9;:17;;;;;:27;;2667:6;;2646:17;:27;;2667:6;;2646:27;:::i;:::-;;;;-1:-1:-1;;2688:36:0;;1391:25:1;;;2713:1:0;;-1:-1:-1;;;;;2688:36:0;;;-1:-1:-1;;;;;;;;;;;2688:36:0;1379:2:1;1364:18;2688:36:0;1245:177:1;14:597;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:1;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:1:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;2140:180::-;2199:6;2252:2;2240:9;2231:7;2227:23;2223:32;2220:52;;;2268:1;2265;2258:12;2220:52;-1:-1:-1;2291:23:1;;2140:180;-1:-1:-1;2140:180:1:o;2325:260::-;2393:6;2401;2454:2;2442:9;2433:7;2429:23;2425:32;2422:52;;;2470:1;2467;2460:12;2422:52;2493:29;2512:9;2493:29;:::i;:::-;2483:39;;2541:38;2575:2;2564:9;2560:18;2541:38;:::i;:::-;2531:48;;2325:260;;;;;:::o;2590:380::-;2669:1;2665:12;;;;2712;;;2733:61;;2787:4;2779:6;2775:17;2765:27;;2733:61;2840:2;2832:6;2829:14;2809:18;2806:38;2803:161;;2886:10;2881:3;2877:20;2874:1;2867:31;2921:4;2918:1;2911:15;2949:4;2946:1;2939:15;2803:161;;2590:380;;;:::o;3787:127::-;3848:10;3843:3;3839:20;3836:1;3829:31;3879:4;3876:1;3869:15;3903:4;3900:1;3893:15;3919:125;3959:4;3987:1;3984;3981:8;3978:34;;;3992:18;;:::i;:::-;-1:-1:-1;4029:9:1;;3919:125::o;4816:128::-;4856:3;4887:1;4883:6;4880:1;4877:13;4874:39;;;4893:18;;:::i;:::-;-1:-1:-1;4929:9:1;;4816:128::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    64,
    3038
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x15C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x140 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0xE7 CALLDATASIZE PUSH1 0x4 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x13B CALLDATASIZE PUSH1 0x4 PUSH2 0x87A JUMP JUMPDEST PUSH2 0x378 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x47C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEC PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x850 JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x8D1 JUMP JUMPDEST PUSH2 0x49D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D1 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x8D1 JUMP JUMPDEST PUSH2 0x4CF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x112 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x22B SWAP1 PUSH2 0x91D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x257 SWAP1 PUSH2 0x91D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2A4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x279 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2A4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x287 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x407 DUP4 DUP3 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x460 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x473 DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x22B SWAP1 PUSH2 0x91D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x496 CALLER DUP5 DUP5 PUSH2 0x4E8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4A7 CALLER DUP3 PUSH2 0x643 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE ADDRESS SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x99D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x4DA CALLER CALLER DUP4 PUSH2 0x378 JUMP JUMPDEST POP PUSH2 0x4E5 CALLER DUP3 PUSH2 0x710 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x540 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x99D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x573 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x5FD DUP4 DUP3 PUSH2 0x96D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP7 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x633 SWAP1 DUP5 SWAP1 PUSH2 0x984 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x699 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x984 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x6D7 SWAP1 DUP5 SWAP1 PUSH2 0x984 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x99D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x781 SWAP2 SWAP1 PUSH2 0x96D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x7AE SWAP1 DUP5 SWAP1 PUSH2 0x96D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x99D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x704 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x80C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7F0 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x81E JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x84B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x863 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x86C DUP4 PUSH2 0x834 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x88F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x898 DUP5 PUSH2 0x834 JUMP JUMPDEST SWAP3 POP PUSH2 0x8A6 PUSH1 0x20 DUP6 ADD PUSH2 0x834 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x496 DUP3 PUSH2 0x834 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x906 DUP4 PUSH2 0x834 JUMP JUMPDEST SWAP2 POP PUSH2 0x914 PUSH1 0x20 DUP5 ADD PUSH2 0x834 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x931 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x951 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x97F JUMPI PUSH2 0x97F PUSH2 0x957 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x997 JUMPI PUSH2 0x997 PUSH2 0x957 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 ADDMOD CODESIZE LOG0 0x1E SSTORE 0xEF 0xF6 LOG3 DIFFICULTY EXTCODECOPY 0x1E PUSH26 0xF02EE1BCAFA2211C735F84A15430E746BF49E164736F6C634300 ADDMOD 0xE STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        64,
        3038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9C"
    },
    "12": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "25": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x64"
    },
    "29": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "36": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x15C"
    },
    "40": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "47": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x189"
    },
    "51": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "58": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19E"
    },
    "62": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xB6B55F25"
    },
    "69": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BE"
    },
    "73": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDB006A75"
    },
    "80": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "EQ",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D3"
    },
    "84": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "85": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "91": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "EQ",
      "path": "0"
    },
    "92": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E6"
    },
    "95": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "96": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "99": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "REVERT",
      "path": "0"
    },
    "100": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "107": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1"
    },
    "111": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "118": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "EQ",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "122": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "123": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "124": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "129": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "EQ",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFC"
    },
    "133": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "134": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "140": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "EQ",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x120"
    },
    "144": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "145": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "146": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "151": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "EQ",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x140"
    },
    "155": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "156": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "157": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "159": {
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "DUP1",
      "path": "0"
    },
    "160": {
      "first_revert": true,
      "fn": null,
      "offset": [
        64,
        3038
      ],
      "op": "REVERT",
      "path": "0"
    },
    "161": {
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "162": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "165": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD"
    },
    "168": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "172": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "REVERT",
      "path": "0"
    },
    "173": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "174": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "POP",
      "path": "0"
    },
    "175": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "178": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21E"
    },
    "181": {
      "fn": null,
      "jump": "i",
      "offset": [
        117,
        135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "182": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "183": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "185": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "186": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "189": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "190": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "191": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7DF"
    },
    "194": {
      "fn": null,
      "jump": "i",
      "offset": [
        117,
        135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "195": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "196": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "198": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "SUB",
      "path": "0"
    },
    "202": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        117,
        135
      ],
      "op": "RETURN",
      "path": "0"
    },
    "204": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "205": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "206": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "DUP1",
      "path": "0"
    },
    "207": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "208": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8"
    },
    "211": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "212": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "214": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "DUP1",
      "path": "0"
    },
    "215": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "REVERT",
      "path": "0"
    },
    "216": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "217": {
      "op": "POP"
    },
    "218": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC"
    },
    "221": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE7"
    },
    "224": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "225": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "227": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x850"
    },
    "230": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        1386,
        1669
      ],
      "op": "JUMP",
      "path": "0"
    },
    "231": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "232": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AC"
    },
    "235": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        1386,
        1669
      ],
      "op": "JUMP",
      "path": "0"
    },
    "236": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "237": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "239": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "240": {
      "op": "SWAP1"
    },
    "241": {
      "op": "ISZERO"
    },
    "242": {
      "op": "ISZERO"
    },
    "243": {
      "op": "DUP2"
    },
    "244": {
      "op": "MSTORE"
    },
    "245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "247": {
      "op": "ADD"
    },
    "248": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "251": {
      "op": "JUMP"
    },
    "252": {
      "offset": [
        85,
        111
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "253": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "254": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "DUP1",
      "path": "0"
    },
    "255": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "256": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x108"
    },
    "259": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "260": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "262": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "DUP1",
      "path": "0"
    },
    "263": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "REVERT",
      "path": "0"
    },
    "264": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "265": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "POP",
      "path": "0"
    },
    "266": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112"
    },
    "269": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "271": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "272": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "DUP2",
      "path": "0"
    },
    "273": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "JUMP",
      "path": "0"
    },
    "274": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "275": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "277": {
      "fn": "ERC20.approve",
      "offset": [
        85,
        111
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "278": {
      "op": "SWAP1"
    },
    "279": {
      "op": "DUP2"
    },
    "280": {
      "op": "MSTORE"
    },
    "281": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "283": {
      "op": "ADD"
    },
    "284": {
      "offset": [
        85,
        111
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "287": {
      "op": "JUMP"
    },
    "288": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "289": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "290": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "291": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "292": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12C"
    },
    "295": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "296": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "298": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "299": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "REVERT",
      "path": "0"
    },
    "300": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "301": {
      "op": "POP"
    },
    "302": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC"
    },
    "305": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B"
    },
    "308": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "309": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "311": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x87A"
    },
    "314": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        884,
        1380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "315": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "316": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "319": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        884,
        1380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "320": {
      "fn": "ERC20.decimals",
      "offset": [
        635,
        711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "321": {
      "fn": "ERC20.decimals",
      "offset": [
        635,
        711
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "322": {
      "fn": "ERC20.decimals",
      "offset": [
        635,
        711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "323": {
      "fn": "ERC20.decimals",
      "offset": [
        635,
        711
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "324": {
      "fn": "ERC20.decimals",
      "offset": [
        635,
        711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C"
    },
    "327": {
      "fn": "ERC20.decimals",
      "offset": [
        635,
        711
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "328": {
      "fn": "ERC20.decimals",
      "offset": [
        635,
        711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "330": {
      "fn": "ERC20.decimals",
      "offset": [
        635,
        711
      ],
      "op": "DUP1",
      "path": "0"
    },
    "331": {
      "fn": "ERC20.decimals",
      "offset": [
        635,
        711
      ],
      "op": "REVERT",
      "path": "0"
    },
    "332": {
      "fn": "ERC20.decimals",
      "offset": [
        635,
        711
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "333": {
      "op": "POP"
    },
    "334": {
      "fn": "ERC20.decimals",
      "offset": [
        635,
        711
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "336": {
      "fn": "ERC20.decimals",
      "offset": [
        635,
        711
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "337": {
      "fn": "ERC20.decimals",
      "offset": [
        702,
        704
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x12"
    },
    "339": {
      "op": "DUP2"
    },
    "340": {
      "op": "MSTORE"
    },
    "341": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "343": {
      "op": "ADD"
    },
    "344": {
      "fn": "ERC20.decimals",
      "offset": [
        635,
        711
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "347": {
      "op": "JUMP"
    },
    "348": {
      "offset": [
        361,
        405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "349": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "350": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "DUP1",
      "path": "0"
    },
    "351": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "352": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x168"
    },
    "355": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "356": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "358": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "DUP1",
      "path": "0"
    },
    "359": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "REVERT",
      "path": "0"
    },
    "360": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "361": {
      "op": "POP"
    },
    "362": {
      "offset": [
        361,
        405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112"
    },
    "365": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x177"
    },
    "368": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "369": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "371": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8B6"
    },
    "374": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        361,
        405
      ],
      "op": "JUMP",
      "path": "0"
    },
    "375": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "376": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "378": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "380": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "381": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "383": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "384": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "DUP2",
      "path": "0"
    },
    "385": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "386": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "388": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "389": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "390": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "391": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "DUP2",
      "path": "0"
    },
    "392": {
      "fn": "ERC20.decimals",
      "offset": [
        361,
        405
      ],
      "op": "JUMP",
      "path": "0"
    },
    "393": {
      "offset": [
        141,
        161
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "394": {
      "fn": "ERC20.decimals",
      "offset": [
        141,
        161
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "395": {
      "fn": "ERC20.decimals",
      "offset": [
        141,
        161
      ],
      "op": "DUP1",
      "path": "0"
    },
    "396": {
      "fn": "ERC20.decimals",
      "offset": [
        141,
        161
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "397": {
      "fn": "ERC20.decimals",
      "offset": [
        141,
        161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x195"
    },
    "400": {
      "fn": "ERC20.decimals",
      "offset": [
        141,
        161
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "401": {
      "fn": "ERC20.decimals",
      "offset": [
        141,
        161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "403": {
      "fn": "ERC20.decimals",
      "offset": [
        141,
        161
      ],
      "op": "DUP1",
      "path": "0"
    },
    "404": {
      "fn": "ERC20.decimals",
      "offset": [
        141,
        161
      ],
      "op": "REVERT",
      "path": "0"
    },
    "405": {
      "fn": "ERC20.decimals",
      "offset": [
        141,
        161
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "406": {
      "fn": "ERC20.decimals",
      "offset": [
        141,
        161
      ],
      "op": "POP",
      "path": "0"
    },
    "407": {
      "fn": "ERC20.decimals",
      "offset": [
        141,
        161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB6"
    },
    "410": {
      "fn": "ERC20.decimals",
      "offset": [
        141,
        161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47C"
    },
    "413": {
      "fn": "ERC20.decimals",
      "jump": "i",
      "offset": [
        141,
        161
      ],
      "op": "JUMP",
      "path": "0"
    },
    "414": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "415": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "416": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "DUP1",
      "path": "0"
    },
    "417": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "418": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AA"
    },
    "421": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "422": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "424": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "DUP1",
      "path": "0"
    },
    "425": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "REVERT",
      "path": "0"
    },
    "426": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "427": {
      "op": "POP"
    },
    "428": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xEC"
    },
    "431": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B9"
    },
    "434": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "435": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "437": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x850"
    },
    "440": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        717,
        878
      ],
      "op": "JUMP",
      "path": "0"
    },
    "441": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "442": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x489"
    },
    "445": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        717,
        878
      ],
      "op": "JUMP",
      "path": "0"
    },
    "446": {
      "fn": "ERC20.deposit",
      "offset": [
        2737,
        2885
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "447": {
      "fn": "ERC20.deposit",
      "offset": [
        2737,
        2885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1"
    },
    "450": {
      "fn": "ERC20.deposit",
      "offset": [
        2737,
        2885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1CC"
    },
    "453": {
      "fn": "ERC20.deposit",
      "offset": [
        2737,
        2885
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "454": {
      "fn": "ERC20.deposit",
      "offset": [
        2737,
        2885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "456": {
      "fn": "ERC20.deposit",
      "offset": [
        2737,
        2885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D1"
    },
    "459": {
      "fn": "ERC20.deposit",
      "jump": "i",
      "offset": [
        2737,
        2885
      ],
      "op": "JUMP",
      "path": "0"
    },
    "460": {
      "fn": "ERC20.deposit",
      "offset": [
        2737,
        2885
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "461": {
      "fn": "ERC20.deposit",
      "offset": [
        2737,
        2885
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x49D"
    },
    "464": {
      "fn": "ERC20.deposit",
      "jump": "i",
      "offset": [
        2737,
        2885
      ],
      "op": "JUMP",
      "path": "0"
    },
    "465": {
      "fn": "ERC20.deposit",
      "offset": [
        2737,
        2885
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "466": {
      "fn": "ERC20.deposit",
      "offset": [
        2737,
        2885
      ],
      "op": "STOP",
      "path": "0"
    },
    "467": {
      "fn": "ERC20.redeem",
      "offset": [
        2891,
        3036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "468": {
      "fn": "ERC20.redeem",
      "offset": [
        2891,
        3036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D1"
    },
    "471": {
      "fn": "ERC20.redeem",
      "offset": [
        2891,
        3036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E1"
    },
    "474": {
      "fn": "ERC20.redeem",
      "offset": [
        2891,
        3036
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "475": {
      "fn": "ERC20.redeem",
      "offset": [
        2891,
        3036
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "477": {
      "fn": "ERC20.redeem",
      "offset": [
        2891,
        3036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8D1"
    },
    "480": {
      "fn": "ERC20.redeem",
      "jump": "i",
      "offset": [
        2891,
        3036
      ],
      "op": "JUMP",
      "path": "0"
    },
    "481": {
      "fn": "ERC20.redeem",
      "offset": [
        2891,
        3036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "482": {
      "fn": "ERC20.redeem",
      "offset": [
        2891,
        3036
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4CF"
    },
    "485": {
      "fn": "ERC20.redeem",
      "jump": "i",
      "offset": [
        2891,
        3036
      ],
      "op": "JUMP",
      "path": "0"
    },
    "486": {
      "offset": [
        411,
        475
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "487": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "488": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "DUP1",
      "path": "0"
    },
    "489": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "490": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F2"
    },
    "493": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "494": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "496": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "DUP1",
      "path": "0"
    },
    "497": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "REVERT",
      "path": "0"
    },
    "498": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "499": {
      "op": "POP"
    },
    "500": {
      "offset": [
        411,
        475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x112"
    },
    "503": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x201"
    },
    "506": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "507": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "509": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8EA"
    },
    "512": {
      "fn": "ERC20.redeem",
      "jump": "i",
      "offset": [
        411,
        475
      ],
      "op": "JUMP",
      "path": "0"
    },
    "513": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "514": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "516": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "518": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "519": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "DUP2",
      "path": "0"
    },
    "520": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "521": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "523": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "524": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "DUP4",
      "path": "0"
    },
    "525": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "526": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "528": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "DUP1",
      "path": "0"
    },
    "529": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "DUP5",
      "path": "0"
    },
    "530": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "531": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "532": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "533": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "534": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "535": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "DUP3",
      "path": "0"
    },
    "536": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "537": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "538": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "539": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "540": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "DUP2",
      "path": "0"
    },
    "541": {
      "fn": "ERC20.redeem",
      "offset": [
        411,
        475
      ],
      "op": "JUMP",
      "path": "0"
    },
    "542": {
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "543": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "545": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "546": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "547": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22B"
    },
    "550": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "551": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91D"
    },
    "554": {
      "fn": "ERC20.redeem",
      "jump": "i",
      "offset": [
        117,
        135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "555": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "556": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "557": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "559": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "560": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "562": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "563": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "564": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DIV",
      "path": "0"
    },
    "565": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "MUL",
      "path": "0"
    },
    "566": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "568": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "569": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "571": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "572": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "573": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "574": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "575": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "577": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "578": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "579": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "580": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "581": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "582": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "583": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "584": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "585": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "587": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "588": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP3",
      "path": "0"
    },
    "589": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "590": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "591": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x257"
    },
    "594": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "595": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91D"
    },
    "598": {
      "fn": "ERC20.redeem",
      "jump": "i",
      "offset": [
        117,
        135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "599": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "600": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "601": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "602": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A4"
    },
    "605": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "606": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "607": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "609": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "LT",
      "path": "0"
    },
    "610": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x279"
    },
    "613": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "614": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "617": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "618": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP4",
      "path": "0"
    },
    "619": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "620": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DIV",
      "path": "0"
    },
    "621": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "MUL",
      "path": "0"
    },
    "622": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP4",
      "path": "0"
    },
    "623": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "624": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "625": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "627": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "628": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "629": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A4"
    },
    "632": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "633": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "634": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP3",
      "path": "0"
    },
    "635": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "636": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "637": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "638": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "640": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "641": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "643": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "645": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "646": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "647": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "648": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "649": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "650": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "651": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "652": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "653": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "655": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "656": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "657": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "659": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "660": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP1",
      "path": "0"
    },
    "661": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP4",
      "path": "0"
    },
    "662": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "GT",
      "path": "0"
    },
    "663": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x287"
    },
    "666": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "667": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP3",
      "path": "0"
    },
    "668": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "669": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SUB",
      "path": "0"
    },
    "670": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "672": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "AND",
      "path": "0"
    },
    "673": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP3",
      "path": "0"
    },
    "674": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "ADD",
      "path": "0"
    },
    "675": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "676": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "677": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "POP",
      "path": "0"
    },
    "678": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "POP",
      "path": "0"
    },
    "679": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "POP",
      "path": "0"
    },
    "680": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "POP",
      "path": "0"
    },
    "681": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "POP",
      "path": "0"
    },
    "682": {
      "fn": "ERC20.redeem",
      "offset": [
        117,
        135
      ],
      "op": "DUP2",
      "path": "0"
    },
    "683": {
      "fn": "ERC20.redeem",
      "jump": "o",
      "offset": [
        117,
        135
      ],
      "op": "JUMP",
      "path": "0"
    },
    "684": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "685": {
      "fn": "ERC20.approve",
      "offset": [
        1454,
        1458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "691": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "693": {
      "op": "SHL"
    },
    "694": {
      "op": "SUB"
    },
    "695": {
      "fn": "ERC20.approve",
      "offset": [
        1478,
        1499
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 1
    },
    "696": {
      "branch": 28,
      "fn": "ERC20.approve",
      "offset": [
        1478,
        1499
      ],
      "op": "AND",
      "path": "0"
    },
    "697": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x314"
    },
    "700": {
      "branch": 28,
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "701": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "703": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "704": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "708": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "710": {
      "op": "SHL"
    },
    "711": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "DUP2",
      "path": "0"
    },
    "712": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "713": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "715": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "717": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "DUP3",
      "path": "0"
    },
    "718": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "ADD",
      "path": "0"
    },
    "719": {
      "op": "MSTORE"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "724": {
      "op": "DUP3"
    },
    "725": {
      "op": "ADD"
    },
    "726": {
      "op": "MSTORE"
    },
    "727": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "762": {
      "op": "DUP3"
    },
    "763": {
      "op": "ADD"
    },
    "764": {
      "op": "MSTORE"
    },
    "765": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "773": {
      "op": "DUP3"
    },
    "774": {
      "op": "ADD"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "778": {
      "op": "ADD"
    },
    "779": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "780": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "782": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "783": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "DUP1",
      "path": "0"
    },
    "784": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "785": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "SUB",
      "path": "0"
    },
    "786": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "787": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "788": {
      "fn": "ERC20.approve",
      "offset": [
        1470,
        1538
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "789": {
      "fn": "ERC20.approve",
      "offset": [
        1559,
        1569
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 2
    },
    "790": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "792": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1570
      ],
      "op": "DUP2",
      "path": "0"
    },
    "793": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1570
      ],
      "op": "DUP2",
      "path": "0"
    },
    "794": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1570
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "795": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1558
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "797": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "799": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1570
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "800": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1570
      ],
      "op": "DUP2",
      "path": "0"
    },
    "801": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1570
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "802": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1570
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "804": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1570
      ],
      "op": "DUP1",
      "path": "0"
    },
    "805": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1570
      ],
      "op": "DUP4",
      "path": "0"
    },
    "806": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1570
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "813": {
      "op": "SHL"
    },
    "814": {
      "op": "SUB"
    },
    "815": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1579
      ],
      "op": "DUP9",
      "path": "0"
    },
    "816": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1579
      ],
      "op": "AND",
      "path": "0"
    },
    "817": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1579
      ],
      "op": "DUP1",
      "path": "0"
    },
    "818": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1579
      ],
      "op": "DUP6",
      "path": "0"
    },
    "819": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "820": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "821": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1579
      ],
      "op": "DUP4",
      "path": "0"
    },
    "822": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1579
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "823": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1579
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "824": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1579
      ],
      "op": "DUP2",
      "path": "0"
    },
    "825": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1579
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "826": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1579
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "827": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1588
      ],
      "op": "DUP7",
      "path": "0"
    },
    "828": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1588
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "829": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1588
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "830": {
      "fn": "ERC20.approve",
      "offset": [
        1604,
        1641
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 3
    },
    "831": {
      "op": "DUP6"
    },
    "832": {
      "op": "DUP2"
    },
    "833": {
      "op": "MSTORE"
    },
    "834": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1579
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "835": {
      "fn": "ERC20.approve",
      "offset": [
        1549,
        1579
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "836": {
      "fn": "ERC20.approve",
      "offset": [
        1559,
        1569
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "837": {
      "fn": "ERC20.approve",
      "offset": [
        1604,
        1641
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "870": {
      "fn": "ERC20.approve",
      "offset": [
        1604,
        1641
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "fn": "ERC20.approve",
      "offset": [
        1604,
        1641
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "874": {
      "fn": "ERC20.approve",
      "offset": [
        1604,
        1641
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "875": {
      "fn": "ERC20.approve",
      "offset": [
        1604,
        1641
      ],
      "op": "DUP1",
      "path": "0"
    },
    "876": {
      "fn": "ERC20.approve",
      "offset": [
        1604,
        1641
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "877": {
      "fn": "ERC20.approve",
      "offset": [
        1604,
        1641
      ],
      "op": "SUB",
      "path": "0"
    },
    "878": {
      "fn": "ERC20.approve",
      "offset": [
        1604,
        1641
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "879": {
      "fn": "ERC20.approve",
      "offset": [
        1604,
        1641
      ],
      "op": "LOG3",
      "path": "0"
    },
    "880": {
      "op": "POP"
    },
    "881": {
      "fn": "ERC20.approve",
      "offset": [
        1658,
        1662
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x1"
    },
    "883": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "884": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "885": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "POP",
      "path": "0"
    },
    "886": {
      "fn": "ERC20.approve",
      "offset": [
        1386,
        1669
      ],
      "op": "POP",
      "path": "0"
    },
    "887": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        1386,
        1669
      ],
      "op": "JUMP",
      "path": "0"
    },
    "888": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "895": {
      "op": "SHL"
    },
    "896": {
      "op": "SUB"
    },
    "897": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1063
      ],
      "op": "DUP4",
      "path": "0"
    },
    "898": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1063
      ],
      "op": "AND",
      "path": "0"
    },
    "899": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1003,
        1007
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "901": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1063
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "902": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1063
      ],
      "op": "DUP2",
      "path": "0"
    },
    "903": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1063
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "904": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1055
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "906": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "908": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1063
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "909": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1063
      ],
      "op": "DUP2",
      "path": "0"
    },
    "910": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1063
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "911": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "913": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1063
      ],
      "op": "DUP1",
      "path": "0"
    },
    "914": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1063
      ],
      "op": "DUP4",
      "path": "0"
    },
    "915": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1063
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "916": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1064,
        1074
      ],
      "op": "CALLER",
      "path": "0"
    },
    "917": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1075
      ],
      "op": "DUP5",
      "path": "0"
    },
    "918": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1075
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "919": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1075
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "920": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1075
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "921": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1075
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "922": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1075
      ],
      "op": "DUP2",
      "path": "0"
    },
    "923": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1075
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "924": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1046,
        1075
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "925": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1107,
        1133
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 5
    },
    "926": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1107,
        1133
      ],
      "op": "DUP2",
      "path": "0"
    },
    "927": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1107,
        1133
      ],
      "op": "LT",
      "path": "0"
    },
    "928": {
      "branch": 29,
      "fn": "ERC20.transferFrom",
      "offset": [
        1107,
        1133
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "929": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1086,
        1199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FD"
    },
    "932": {
      "branch": 29,
      "fn": "ERC20.transferFrom",
      "offset": [
        1086,
        1199
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "933": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1086,
        1199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "935": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1086,
        1199
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "936": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "940": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "942": {
      "op": "SHL"
    },
    "943": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1086,
        1199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "944": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1086,
        1199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "947": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1086,
        1199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "949": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1086,
        1199
      ],
      "op": "DUP3",
      "path": "0"
    },
    "950": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1086,
        1199
      ],
      "op": "ADD",
      "path": "0"
    },
    "951": {
      "op": "MSTORE"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "954": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "956": {
      "op": "DUP3"
    },
    "957": {
      "op": "ADD"
    },
    "958": {
      "op": "MSTORE"
    },
    "959": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "994": {
      "op": "DUP3"
    },
    "995": {
      "op": "ADD"
    },
    "996": {
      "op": "MSTORE"
    },
    "997": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "1006": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1008": {
      "op": "SHL"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1011": {
      "op": "DUP3"
    },
    "1012": {
      "op": "ADD"
    },
    "1013": {
      "op": "MSTORE"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1016": {
      "op": "ADD"
    },
    "1017": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1086,
        1199
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30B"
    },
    "1020": {
      "op": "JUMP"
    },
    "1021": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1086,
        1199
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1022": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1242,
        1267
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 6,
      "value": "0x407"
    },
    "1025": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1261,
        1267
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1026": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1242,
        1258
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1027": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1242,
        1267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96D"
    },
    "1030": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        1242,
        1267
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1031": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1242,
        1267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1038": {
      "op": "SHL"
    },
    "1039": {
      "op": "SUB"
    },
    "1040": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1227
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1041": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1227
      ],
      "op": "AND",
      "path": "0"
    },
    "1042": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1044": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1227
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1045": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1227
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1046": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1227
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1047": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1219
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1049": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1051": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1227
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1052": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1227
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1053": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1227
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1054": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1227
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1056": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1227
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1057": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1227
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1058": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1227
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1059": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1228,
        1238
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1060": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1239
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1061": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1239
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1062": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1239
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1063": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1239
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1064": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1239
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1065": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1239
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1066": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1239
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1067": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1239
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1068": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1239
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1069": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1267
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1070": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1071": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1267
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1072": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1210,
        1267
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1073": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1283,
        1319
      ],
      "op": "MLOAD",
      "path": "0",
      "statement": 7
    },
    "1074": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1283,
        1319
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1107": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1283,
        1319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1108": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1283,
        1319
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x460"
    },
    "1111": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1283,
        1319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1112": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1312,
        1318
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1113": {
      "op": "DUP2"
    },
    "1114": {
      "op": "MSTORE"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1117": {
      "op": "ADD"
    },
    "1118": {
      "op": "SWAP1"
    },
    "1119": {
      "op": "JUMP"
    },
    "1120": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1283,
        1319
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1121": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1283,
        1319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1123": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1283,
        1319
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1124": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1283,
        1319
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1125": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1283,
        1319
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1126": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1283,
        1319
      ],
      "op": "SUB",
      "path": "0"
    },
    "1127": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1283,
        1319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1128": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1283,
        1319
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1129": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1337,
        1373
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 8,
      "value": "0x473"
    },
    "1132": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1347,
        1353
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1133": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1355,
        1364
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1134": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1366,
        1372
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1135": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1337,
        1346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E8"
    },
    "1138": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        1337,
        1373
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1139": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1337,
        1373
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1140": {
      "fn": "ERC20.transferFrom",
      "offset": [
        1330,
        1373
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1141": {
      "fn": "ERC20.transferFrom",
      "offset": [
        884,
        1380
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1142": {
      "op": "POP"
    },
    "1143": {
      "op": "POP"
    },
    "1144": {
      "op": "POP"
    },
    "1145": {
      "op": "POP"
    },
    "1146": {
      "op": "POP"
    },
    "1147": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        884,
        1380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1148": {
      "offset": [
        141,
        161
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1149": {
      "fn": "ERC20.transferFrom",
      "offset": [
        141,
        161
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1151": {
      "fn": "ERC20.transferFrom",
      "offset": [
        141,
        161
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1152": {
      "fn": "ERC20.transferFrom",
      "offset": [
        141,
        161
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1153": {
      "fn": "ERC20.transferFrom",
      "offset": [
        141,
        161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22B"
    },
    "1156": {
      "fn": "ERC20.transferFrom",
      "offset": [
        141,
        161
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1157": {
      "fn": "ERC20.transferFrom",
      "offset": [
        141,
        161
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x91D"
    },
    "1160": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        141,
        161
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1161": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1162": {
      "fn": "ERC20.transfer",
      "offset": [
        804,
        808
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1164": {
      "fn": "ERC20.transfer",
      "offset": [
        831,
        871
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 9,
      "value": "0x496"
    },
    "1167": {
      "fn": "ERC20.transfer",
      "offset": [
        841,
        851
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1168": {
      "fn": "ERC20.transfer",
      "offset": [
        853,
        862
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1169": {
      "fn": "ERC20.transfer",
      "offset": [
        864,
        870
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1170": {
      "fn": "ERC20.transfer",
      "offset": [
        831,
        840
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E8"
    },
    "1173": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        831,
        871
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1174": {
      "fn": "ERC20.transfer",
      "offset": [
        831,
        871
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1175": {
      "fn": "ERC20.transfer",
      "offset": [
        824,
        871
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1176": {
      "fn": "ERC20.transfer",
      "offset": [
        717,
        878
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1177": {
      "op": "POP"
    },
    "1178": {
      "op": "POP"
    },
    "1179": {
      "op": "POP"
    },
    "1180": {
      "fn": "ERC20.transfer",
      "jump": "o",
      "offset": [
        717,
        878
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1181": {
      "fn": "ERC20.deposit",
      "offset": [
        2737,
        2885
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1182": {
      "fn": "ERC20.deposit",
      "offset": [
        2795,
        2820
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x4A7"
    },
    "1185": {
      "fn": "ERC20.deposit",
      "offset": [
        2801,
        2811
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1186": {
      "fn": "ERC20.deposit",
      "offset": [
        2813,
        2819
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1187": {
      "fn": "ERC20.deposit",
      "offset": [
        2795,
        2800
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x643"
    },
    "1190": {
      "fn": "ERC20.deposit",
      "jump": "i",
      "offset": [
        2795,
        2820
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1191": {
      "fn": "ERC20.deposit",
      "offset": [
        2795,
        2820
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1192": {
      "fn": "ERC20.deposit",
      "offset": [
        2835,
        2878
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x40"
    },
    "1194": {
      "fn": "ERC20.deposit",
      "offset": [
        2835,
        2878
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1195": {
      "op": "DUP2"
    },
    "1196": {
      "op": "DUP2"
    },
    "1197": {
      "op": "MSTORE"
    },
    "1198": {
      "fn": "ERC20.deposit",
      "offset": [
        2864,
        2868
      ],
      "op": "ADDRESS",
      "path": "0"
    },
    "1199": {
      "fn": "ERC20.deposit",
      "offset": [
        2864,
        2868
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1200": {
      "fn": "ERC20.deposit",
      "offset": [
        2844,
        2854
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1201": {
      "fn": "ERC20.deposit",
      "offset": [
        2844,
        2854
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1204": {
      "op": "DUP1"
    },
    "1205": {
      "op": "MLOAD"
    },
    "1206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1208": {
      "op": "PUSH2",
      "value": "0x99D"
    },
    "1211": {
      "op": "DUP4"
    },
    "1212": {
      "op": "CODECOPY"
    },
    "1213": {
      "op": "DUP2"
    },
    "1214": {
      "op": "MLOAD"
    },
    "1215": {
      "op": "SWAP2"
    },
    "1216": {
      "op": "MSTORE"
    },
    "1217": {
      "fn": "ERC20.deposit",
      "offset": [
        2835,
        2878
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1220": {
      "op": "ADD"
    },
    "1221": {
      "fn": "ERC20.deposit",
      "offset": [
        2835,
        2878
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1223": {
      "fn": "ERC20.deposit",
      "offset": [
        2835,
        2878
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1224": {
      "fn": "ERC20.deposit",
      "offset": [
        2835,
        2878
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1225": {
      "fn": "ERC20.deposit",
      "offset": [
        2835,
        2878
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1226": {
      "fn": "ERC20.deposit",
      "offset": [
        2835,
        2878
      ],
      "op": "SUB",
      "path": "0"
    },
    "1227": {
      "fn": "ERC20.deposit",
      "offset": [
        2835,
        2878
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1228": {
      "fn": "ERC20.deposit",
      "offset": [
        2835,
        2878
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1229": {
      "fn": "ERC20.deposit",
      "offset": [
        2737,
        2885
      ],
      "op": "POP",
      "path": "0"
    },
    "1230": {
      "fn": "ERC20.deposit",
      "jump": "o",
      "offset": [
        2737,
        2885
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1231": {
      "fn": "ERC20.redeem",
      "offset": [
        2891,
        3036
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1232": {
      "fn": "ERC20.redeem",
      "offset": [
        2950,
        2994
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 12,
      "value": "0x4DA"
    },
    "1235": {
      "fn": "ERC20.redeem",
      "offset": [
        2963,
        2973
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1236": {
      "fn": "ERC20.redeem",
      "offset": [
        2975,
        2985
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1237": {
      "fn": "ERC20.redeem",
      "offset": [
        2987,
        2993
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1238": {
      "fn": "ERC20.redeem",
      "offset": [
        2950,
        2962
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x378"
    },
    "1241": {
      "fn": "ERC20.redeem",
      "jump": "i",
      "offset": [
        2950,
        2994
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1242": {
      "fn": "ERC20.redeem",
      "offset": [
        2950,
        2994
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1243": {
      "fn": "ERC20.redeem",
      "offset": [
        2950,
        2994
      ],
      "op": "POP",
      "path": "0"
    },
    "1244": {
      "fn": "ERC20.redeem",
      "offset": [
        3004,
        3029
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 13,
      "value": "0x4E5"
    },
    "1247": {
      "fn": "ERC20.redeem",
      "offset": [
        3010,
        3020
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1248": {
      "fn": "ERC20.redeem",
      "offset": [
        3022,
        3028
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1249": {
      "fn": "ERC20.redeem",
      "offset": [
        3004,
        3009
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x710"
    },
    "1252": {
      "fn": "ERC20.redeem",
      "jump": "i",
      "offset": [
        3004,
        3029
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1253": {
      "fn": "ERC20.redeem",
      "offset": [
        3004,
        3029
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1254": {
      "fn": "ERC20.redeem",
      "offset": [
        2891,
        3036
      ],
      "op": "POP",
      "path": "0"
    },
    "1255": {
      "fn": "ERC20.redeem",
      "jump": "o",
      "offset": [
        2891,
        3036
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1256": {
      "fn": "ERC20._transfer",
      "offset": [
        1675,
        2218
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1257": {
      "fn": "ERC20._transfer",
      "offset": [
        1792,
        1796
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1265": {
      "op": "SHL"
    },
    "1266": {
      "op": "SUB"
    },
    "1267": {
      "fn": "ERC20._transfer",
      "offset": [
        1816,
        1839
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 14
    },
    "1268": {
      "branch": 30,
      "fn": "ERC20._transfer",
      "offset": [
        1816,
        1839
      ],
      "op": "AND",
      "path": "0"
    },
    "1269": {
      "fn": "ERC20._transfer",
      "offset": [
        1808,
        1875
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x540"
    },
    "1272": {
      "branch": 30,
      "fn": "ERC20._transfer",
      "offset": [
        1808,
        1875
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1273": {
      "fn": "ERC20._transfer",
      "offset": [
        1808,
        1875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1275": {
      "fn": "ERC20._transfer",
      "offset": [
        1808,
        1875
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1276": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1282": {
      "op": "SHL"
    },
    "1283": {
      "fn": "ERC20._transfer",
      "offset": [
        1808,
        1875
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1284": {
      "fn": "ERC20._transfer",
      "offset": [
        1808,
        1875
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1287": {
      "fn": "ERC20._transfer",
      "offset": [
        1808,
        1875
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1289": {
      "fn": "ERC20._transfer",
      "offset": [
        1808,
        1875
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1290": {
      "fn": "ERC20._transfer",
      "offset": [
        1808,
        1875
      ],
      "op": "ADD",
      "path": "0"
    },
    "1291": {
      "op": "MSTORE"
    },
    "1292": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1296": {
      "op": "DUP3"
    },
    "1297": {
      "op": "ADD"
    },
    "1298": {
      "op": "MSTORE"
    },
    "1299": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F207A65726F206164647265737300"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1334": {
      "op": "DUP3"
    },
    "1335": {
      "op": "ADD"
    },
    "1336": {
      "op": "MSTORE"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1339": {
      "op": "ADD"
    },
    "1340": {
      "fn": "ERC20._transfer",
      "offset": [
        1808,
        1875
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30B"
    },
    "1343": {
      "op": "JUMP"
    },
    "1344": {
      "fn": "ERC20._transfer",
      "offset": [
        1808,
        1875
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1345": {
      "fn": "ERC20._transfer",
      "offset": [
        1907,
        1916
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 15
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1352": {
      "op": "SHL"
    },
    "1353": {
      "op": "SUB"
    },
    "1354": {
      "fn": "ERC20._transfer",
      "offset": [
        1890,
        1925
      ],
      "op": "AND",
      "path": "0"
    },
    "1355": {
      "fn": "ERC20._transfer",
      "offset": [
        1899,
        1905
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1362": {
      "op": "SHL"
    },
    "1363": {
      "op": "SUB"
    },
    "1364": {
      "fn": "ERC20._transfer",
      "offset": [
        1890,
        1925
      ],
      "op": "AND",
      "path": "0"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1367": {
      "op": "DUP1"
    },
    "1368": {
      "op": "MLOAD"
    },
    "1369": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1371": {
      "op": "PUSH2",
      "value": "0x99D"
    },
    "1374": {
      "op": "DUP4"
    },
    "1375": {
      "op": "CODECOPY"
    },
    "1376": {
      "op": "DUP2"
    },
    "1377": {
      "op": "MLOAD"
    },
    "1378": {
      "op": "SWAP2"
    },
    "1379": {
      "op": "MSTORE"
    },
    "1380": {
      "fn": "ERC20._transfer",
      "offset": [
        1918,
        1924
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1381": {
      "fn": "ERC20._transfer",
      "offset": [
        1890,
        1925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1383": {
      "fn": "ERC20._transfer",
      "offset": [
        1890,
        1925
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1384": {
      "fn": "ERC20._transfer",
      "offset": [
        1890,
        1925
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x573"
    },
    "1387": {
      "fn": "ERC20._transfer",
      "offset": [
        1890,
        1925
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1388": {
      "op": "DUP2"
    },
    "1389": {
      "op": "MSTORE"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1392": {
      "op": "ADD"
    },
    "1393": {
      "op": "SWAP1"
    },
    "1394": {
      "op": "JUMP"
    },
    "1395": {
      "fn": "ERC20._transfer",
      "offset": [
        1890,
        1925
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1396": {
      "fn": "ERC20._transfer",
      "offset": [
        1890,
        1925
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1398": {
      "fn": "ERC20._transfer",
      "offset": [
        1890,
        1925
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1399": {
      "fn": "ERC20._transfer",
      "offset": [
        1890,
        1925
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1400": {
      "fn": "ERC20._transfer",
      "offset": [
        1890,
        1925
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1401": {
      "fn": "ERC20._transfer",
      "offset": [
        1890,
        1925
      ],
      "op": "SUB",
      "path": "0"
    },
    "1402": {
      "fn": "ERC20._transfer",
      "offset": [
        1890,
        1925
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1403": {
      "fn": "ERC20._transfer",
      "offset": [
        1890,
        1925
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1410": {
      "op": "SHL"
    },
    "1411": {
      "op": "SUB"
    },
    "1412": {
      "fn": "ERC20._transfer",
      "offset": [
        1960,
        1977
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1413": {
      "fn": "ERC20._transfer",
      "offset": [
        1960,
        1977
      ],
      "op": "AND",
      "path": "0"
    },
    "1414": {
      "fn": "ERC20._transfer",
      "offset": [
        1936,
        1957
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1416": {
      "fn": "ERC20._transfer",
      "offset": [
        1960,
        1977
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1417": {
      "fn": "ERC20._transfer",
      "offset": [
        1960,
        1977
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1418": {
      "fn": "ERC20._transfer",
      "offset": [
        1960,
        1977
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1419": {
      "fn": "ERC20._transfer",
      "offset": [
        1960,
        1969
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1421": {
      "fn": "ERC20._transfer",
      "offset": [
        1960,
        1977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1423": {
      "fn": "ERC20._transfer",
      "offset": [
        1960,
        1977
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1424": {
      "fn": "ERC20._transfer",
      "offset": [
        1960,
        1977
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1426": {
      "fn": "ERC20._transfer",
      "offset": [
        1960,
        1977
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1427": {
      "fn": "ERC20._transfer",
      "offset": [
        1960,
        1977
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1428": {
      "fn": "ERC20._transfer",
      "offset": [
        1960,
        1977
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1429": {
      "fn": "ERC20._transfer",
      "offset": [
        2009,
        2032
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 16
    },
    "1430": {
      "fn": "ERC20._transfer",
      "offset": [
        2009,
        2032
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1431": {
      "fn": "ERC20._transfer",
      "offset": [
        2009,
        2032
      ],
      "op": "LT",
      "path": "0"
    },
    "1432": {
      "branch": 31,
      "fn": "ERC20._transfer",
      "offset": [
        2009,
        2032
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1433": {
      "fn": "ERC20._transfer",
      "offset": [
        1988,
        2096
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F3"
    },
    "1436": {
      "branch": 31,
      "fn": "ERC20._transfer",
      "offset": [
        1988,
        2096
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1437": {
      "fn": "ERC20._transfer",
      "offset": [
        1988,
        2096
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1439": {
      "fn": "ERC20._transfer",
      "offset": [
        1988,
        2096
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1440": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "fn": "ERC20._transfer",
      "offset": [
        1988,
        2096
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1448": {
      "fn": "ERC20._transfer",
      "offset": [
        1988,
        2096
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1451": {
      "fn": "ERC20._transfer",
      "offset": [
        1988,
        2096
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1453": {
      "fn": "ERC20._transfer",
      "offset": [
        1988,
        2096
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1454": {
      "fn": "ERC20._transfer",
      "offset": [
        1988,
        2096
      ],
      "op": "ADD",
      "path": "0"
    },
    "1455": {
      "op": "MSTORE"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1460": {
      "op": "DUP3"
    },
    "1461": {
      "op": "ADD"
    },
    "1462": {
      "op": "MSTORE"
    },
    "1463": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1498": {
      "op": "DUP3"
    },
    "1499": {
      "op": "ADD"
    },
    "1500": {
      "op": "MSTORE"
    },
    "1501": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1510": {
      "op": "SHL"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1513": {
      "op": "DUP3"
    },
    "1514": {
      "op": "ADD"
    },
    "1515": {
      "op": "MSTORE"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1518": {
      "op": "ADD"
    },
    "1519": {
      "fn": "ERC20._transfer",
      "offset": [
        1988,
        2096
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30B"
    },
    "1522": {
      "op": "JUMP"
    },
    "1523": {
      "fn": "ERC20._transfer",
      "offset": [
        1988,
        2096
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1524": {
      "fn": "ERC20._transfer",
      "offset": [
        2127,
        2149
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 17,
      "value": "0x5FD"
    },
    "1527": {
      "fn": "ERC20._transfer",
      "offset": [
        2143,
        2149
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1528": {
      "fn": "ERC20._transfer",
      "offset": [
        2127,
        2140
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1529": {
      "fn": "ERC20._transfer",
      "offset": [
        2127,
        2149
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96D"
    },
    "1532": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        2127,
        2149
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1533": {
      "fn": "ERC20._transfer",
      "offset": [
        2127,
        2149
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1540": {
      "op": "SHL"
    },
    "1541": {
      "op": "SUB"
    },
    "1542": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2124
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1543": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2124
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1544": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2124
      ],
      "op": "AND",
      "path": "0"
    },
    "1545": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1547": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1548": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2124
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1549": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2124
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1550": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1552": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1554": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2124
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1555": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2124
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1557": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2124
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1558": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2124
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1559": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2124
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1560": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2149
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1561": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2149
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1562": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2149
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1563": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2149
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1564": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2179
      ],
      "op": "SWAP1",
      "path": "0",
      "statement": 18
    },
    "1565": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2179
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1566": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2179
      ],
      "op": "AND",
      "path": "0"
    },
    "1567": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2179
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1568": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2179
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1569": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2179
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1570": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2179
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1571": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2179
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1572": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2189
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1573": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2189
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1574": {
      "fn": "ERC20._transfer",
      "offset": [
        2183,
        2189
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1575": {
      "fn": "ERC20._transfer",
      "offset": [
        2183,
        2189
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1576": {
      "fn": "ERC20._transfer",
      "offset": [
        2107,
        2124
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1577": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x633"
    },
    "1580": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1581": {
      "fn": "ERC20._transfer",
      "offset": [
        2183,
        2189
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1582": {
      "fn": "ERC20._transfer",
      "offset": [
        2183,
        2189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1583": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2189
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x984"
    },
    "1586": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        2159,
        2189
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1587": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2189
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1588": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2189
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1589": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2189
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1590": {
      "fn": "ERC20._transfer",
      "offset": [
        2159,
        2189
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1591": {
      "op": "POP"
    },
    "1592": {
      "fn": "ERC20._transfer",
      "offset": [
        2207,
        2211
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 19,
      "value": "0x1"
    },
    "1594": {
      "fn": "ERC20._transfer",
      "offset": [
        2207,
        2211
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "1595": {
      "fn": "ERC20._transfer",
      "offset": [
        1675,
        2218
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1596": {
      "op": "POP"
    },
    "1597": {
      "op": "POP"
    },
    "1598": {
      "op": "POP"
    },
    "1599": {
      "op": "POP"
    },
    "1600": {
      "op": "POP"
    },
    "1601": {
      "op": "POP"
    },
    "1602": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [
        1675,
        2218
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1603": {
      "fn": "ERC20._mint",
      "offset": [
        2224,
        2466
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1610": {
      "op": "SHL"
    },
    "1611": {
      "op": "SUB"
    },
    "1612": {
      "fn": "ERC20._mint",
      "offset": [
        2294,
        2310
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 20
    },
    "1613": {
      "branch": 32,
      "fn": "ERC20._mint",
      "offset": [
        2294,
        2310
      ],
      "op": "AND",
      "path": "0"
    },
    "1614": {
      "fn": "ERC20._mint",
      "offset": [
        2286,
        2346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x699"
    },
    "1617": {
      "branch": 32,
      "fn": "ERC20._mint",
      "offset": [
        2286,
        2346
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1618": {
      "fn": "ERC20._mint",
      "offset": [
        2286,
        2346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1620": {
      "fn": "ERC20._mint",
      "offset": [
        2286,
        2346
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1627": {
      "op": "SHL"
    },
    "1628": {
      "fn": "ERC20._mint",
      "offset": [
        2286,
        2346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1629": {
      "fn": "ERC20._mint",
      "offset": [
        2286,
        2346
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1632": {
      "fn": "ERC20._mint",
      "offset": [
        2286,
        2346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1634": {
      "fn": "ERC20._mint",
      "offset": [
        2286,
        2346
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1635": {
      "fn": "ERC20._mint",
      "offset": [
        2286,
        2346
      ],
      "op": "ADD",
      "path": "0"
    },
    "1636": {
      "op": "MSTORE"
    },
    "1637": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1641": {
      "op": "DUP3"
    },
    "1642": {
      "op": "ADD"
    },
    "1643": {
      "op": "MSTORE"
    },
    "1644": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1679": {
      "op": "DUP3"
    },
    "1680": {
      "op": "ADD"
    },
    "1681": {
      "op": "MSTORE"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1684": {
      "op": "ADD"
    },
    "1685": {
      "fn": "ERC20._mint",
      "offset": [
        2286,
        2346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30B"
    },
    "1688": {
      "op": "JUMP"
    },
    "1689": {
      "fn": "ERC20._mint",
      "offset": [
        2286,
        2346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1690": {
      "fn": "ERC20._mint",
      "offset": [
        2372,
        2378
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 21
    },
    "1691": {
      "fn": "ERC20._mint",
      "offset": [
        2357,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1693": {
      "fn": "ERC20._mint",
      "offset": [
        2357,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1694": {
      "fn": "ERC20._mint",
      "offset": [
        2357,
        2378
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1695": {
      "fn": "ERC20._mint",
      "offset": [
        2357,
        2378
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1696": {
      "fn": "ERC20._mint",
      "offset": [
        2357,
        2378
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1697": {
      "fn": "ERC20._mint",
      "offset": [
        2357,
        2378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6AA"
    },
    "1700": {
      "fn": "ERC20._mint",
      "offset": [
        2357,
        2378
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1701": {
      "fn": "ERC20._mint",
      "offset": [
        2357,
        2378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1702": {
      "fn": "ERC20._mint",
      "offset": [
        2357,
        2378
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x984"
    },
    "1705": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        2357,
        2378
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1706": {
      "fn": "ERC20._mint",
      "offset": [
        2357,
        2378
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1707": {
      "fn": "ERC20._mint",
      "offset": [
        2357,
        2378
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1708": {
      "fn": "ERC20._mint",
      "offset": [
        2357,
        2378
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1709": {
      "fn": "ERC20._mint",
      "offset": [
        2357,
        2378
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1710": {
      "op": "POP"
    },
    "1711": {
      "op": "POP"
    },
    "1712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1714": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1718": {
      "op": "SHL"
    },
    "1719": {
      "op": "SUB"
    },
    "1720": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2401
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 22
    },
    "1721": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2401
      ],
      "op": "AND",
      "path": "0"
    },
    "1722": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2401
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1724": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2401
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1725": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2401
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1726": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2401
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1727": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2397
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1729": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2401
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1731": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2401
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1732": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2401
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1734": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2401
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1735": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2401
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1736": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2411
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1737": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2411
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1738": {
      "fn": "ERC20._mint",
      "offset": [
        2405,
        2411
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1739": {
      "fn": "ERC20._mint",
      "offset": [
        2405,
        2411
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1740": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2401
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1741": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6D7"
    },
    "1744": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1745": {
      "fn": "ERC20._mint",
      "offset": [
        2405,
        2411
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1746": {
      "fn": "ERC20._mint",
      "offset": [
        2405,
        2411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1747": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2411
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x984"
    },
    "1750": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        2388,
        2411
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1751": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2411
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1752": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2411
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1753": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2411
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1754": {
      "fn": "ERC20._mint",
      "offset": [
        2388,
        2411
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1755": {
      "op": "POP"
    },
    "1756": {
      "op": "POP"
    },
    "1757": {
      "fn": "ERC20._mint",
      "offset": [
        2427,
        2459
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 23,
      "value": "0x40"
    },
    "1759": {
      "fn": "ERC20._mint",
      "offset": [
        2427,
        2459
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1760": {
      "op": "DUP2"
    },
    "1761": {
      "op": "DUP2"
    },
    "1762": {
      "op": "MSTORE"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1769": {
      "op": "SHL"
    },
    "1770": {
      "op": "SUB"
    },
    "1771": {
      "fn": "ERC20._mint",
      "offset": [
        2427,
        2459
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1772": {
      "fn": "ERC20._mint",
      "offset": [
        2427,
        2459
      ],
      "op": "AND",
      "path": "0"
    },
    "1773": {
      "fn": "ERC20._mint",
      "offset": [
        2427,
        2459
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1774": {
      "fn": "ERC20._mint",
      "offset": [
        2444,
        2445
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1776": {
      "fn": "ERC20._mint",
      "offset": [
        2444,
        2445
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1779": {
      "op": "DUP1"
    },
    "1780": {
      "op": "MLOAD"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1783": {
      "op": "PUSH2",
      "value": "0x99D"
    },
    "1786": {
      "op": "DUP4"
    },
    "1787": {
      "op": "CODECOPY"
    },
    "1788": {
      "op": "DUP2"
    },
    "1789": {
      "op": "MLOAD"
    },
    "1790": {
      "op": "SWAP2"
    },
    "1791": {
      "op": "MSTORE"
    },
    "1792": {
      "fn": "ERC20._mint",
      "offset": [
        2427,
        2459
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1795": {
      "op": "ADD"
    },
    "1796": {
      "fn": "ERC20._mint",
      "offset": [
        2427,
        2459
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1797": {
      "fn": "ERC20._mint",
      "offset": [
        2427,
        2459
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1799": {
      "fn": "ERC20._mint",
      "offset": [
        2427,
        2459
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1800": {
      "fn": "ERC20._mint",
      "offset": [
        2427,
        2459
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1801": {
      "fn": "ERC20._mint",
      "offset": [
        2427,
        2459
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1802": {
      "fn": "ERC20._mint",
      "offset": [
        2427,
        2459
      ],
      "op": "SUB",
      "path": "0"
    },
    "1803": {
      "fn": "ERC20._mint",
      "offset": [
        2427,
        2459
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1804": {
      "fn": "ERC20._mint",
      "offset": [
        2427,
        2459
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1805": {
      "fn": "ERC20._mint",
      "offset": [
        2224,
        2466
      ],
      "op": "POP",
      "path": "0"
    },
    "1806": {
      "fn": "ERC20._mint",
      "offset": [
        2224,
        2466
      ],
      "op": "POP",
      "path": "0"
    },
    "1807": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        2224,
        2466
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1808": {
      "fn": "ERC20._burn",
      "offset": [
        2472,
        2731
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1815": {
      "op": "SHL"
    },
    "1816": {
      "op": "SUB"
    },
    "1817": {
      "fn": "ERC20._burn",
      "offset": [
        2546,
        2566
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 24
    },
    "1818": {
      "branch": 33,
      "fn": "ERC20._burn",
      "offset": [
        2546,
        2566
      ],
      "op": "AND",
      "path": "0"
    },
    "1819": {
      "fn": "ERC20._burn",
      "offset": [
        2538,
        2604
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x770"
    },
    "1822": {
      "branch": 33,
      "fn": "ERC20._burn",
      "offset": [
        2538,
        2604
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1823": {
      "fn": "ERC20._burn",
      "offset": [
        2538,
        2604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1825": {
      "fn": "ERC20._burn",
      "offset": [
        2538,
        2604
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1826": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1830": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1832": {
      "op": "SHL"
    },
    "1833": {
      "fn": "ERC20._burn",
      "offset": [
        2538,
        2604
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1834": {
      "fn": "ERC20._burn",
      "offset": [
        2538,
        2604
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1837": {
      "fn": "ERC20._burn",
      "offset": [
        2538,
        2604
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1839": {
      "fn": "ERC20._burn",
      "offset": [
        2538,
        2604
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1840": {
      "fn": "ERC20._burn",
      "offset": [
        2538,
        2604
      ],
      "op": "ADD",
      "path": "0"
    },
    "1841": {
      "op": "MSTORE"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1846": {
      "op": "DUP3"
    },
    "1847": {
      "op": "ADD"
    },
    "1848": {
      "op": "MSTORE"
    },
    "1849": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1884": {
      "op": "DUP3"
    },
    "1885": {
      "op": "ADD"
    },
    "1886": {
      "op": "MSTORE"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "1891": {
      "op": "SHL"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1894": {
      "op": "DUP3"
    },
    "1895": {
      "op": "ADD"
    },
    "1896": {
      "op": "MSTORE"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1899": {
      "op": "ADD"
    },
    "1900": {
      "fn": "ERC20._burn",
      "offset": [
        2538,
        2604
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x30B"
    },
    "1903": {
      "op": "JUMP"
    },
    "1904": {
      "fn": "ERC20._burn",
      "offset": [
        2538,
        2604
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1905": {
      "fn": "ERC20._burn",
      "offset": [
        2630,
        2636
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 25
    },
    "1906": {
      "fn": "ERC20._burn",
      "offset": [
        2615,
        2626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1908": {
      "fn": "ERC20._burn",
      "offset": [
        2615,
        2626
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1909": {
      "fn": "ERC20._burn",
      "offset": [
        2615,
        2636
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1910": {
      "fn": "ERC20._burn",
      "offset": [
        2615,
        2636
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1911": {
      "fn": "ERC20._burn",
      "offset": [
        2615,
        2636
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1912": {
      "fn": "ERC20._burn",
      "offset": [
        2615,
        2636
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x781"
    },
    "1915": {
      "fn": "ERC20._burn",
      "offset": [
        2615,
        2636
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1916": {
      "fn": "ERC20._burn",
      "offset": [
        2615,
        2636
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1917": {
      "fn": "ERC20._burn",
      "offset": [
        2615,
        2636
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96D"
    },
    "1920": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        2615,
        2636
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1921": {
      "fn": "ERC20._burn",
      "offset": [
        2615,
        2636
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1922": {
      "fn": "ERC20._burn",
      "offset": [
        2615,
        2636
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1923": {
      "fn": "ERC20._burn",
      "offset": [
        2615,
        2636
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1924": {
      "fn": "ERC20._burn",
      "offset": [
        2615,
        2636
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1925": {
      "op": "POP"
    },
    "1926": {
      "op": "POP"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1933": {
      "op": "SHL"
    },
    "1934": {
      "op": "SUB"
    },
    "1935": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2663
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 26
    },
    "1936": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2663
      ],
      "op": "AND",
      "path": "0"
    },
    "1937": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1939": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1940": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2663
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1941": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2663
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1942": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2655
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1944": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1946": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2663
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1947": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2663
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1949": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2663
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1950": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2663
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1951": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2673
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1952": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2673
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1953": {
      "fn": "ERC20._burn",
      "offset": [
        2667,
        2673
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1954": {
      "fn": "ERC20._burn",
      "offset": [
        2667,
        2673
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1955": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2663
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1956": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2673
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7AE"
    },
    "1959": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2673
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1960": {
      "fn": "ERC20._burn",
      "offset": [
        2667,
        2673
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1961": {
      "fn": "ERC20._burn",
      "offset": [
        2667,
        2673
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1962": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2673
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96D"
    },
    "1965": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [
        2646,
        2673
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1966": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2673
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1967": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2673
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1968": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2673
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1969": {
      "fn": "ERC20._burn",
      "offset": [
        2646,
        2673
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1970": {
      "op": "POP"
    },
    "1971": {
      "op": "POP"
    },
    "1972": {
      "fn": "ERC20._burn",
      "offset": [
        2688,
        2724
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 27,
      "value": "0x40"
    },
    "1974": {
      "fn": "ERC20._burn",
      "offset": [
        2688,
        2724
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1975": {
      "op": "DUP2"
    },
    "1976": {
      "op": "DUP2"
    },
    "1977": {
      "op": "MSTORE"
    },
    "1978": {
      "fn": "ERC20._burn",
      "offset": [
        2713,
        2714
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1980": {
      "fn": "ERC20._burn",
      "offset": [
        2713,
        2714
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1983": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1987": {
      "op": "SHL"
    },
    "1988": {
      "op": "SUB"
    },
    "1989": {
      "fn": "ERC20._burn",
      "offset": [
        2688,
        2724
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1990": {
      "fn": "ERC20._burn",
      "offset": [
        2688,
        2724
      ],
      "op": "AND",
      "path": "0"
    },
    "1991": {
      "fn": "ERC20._burn",
      "offset": [
        2688,
        2724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1994": {
      "op": "DUP1"
    },
    "1995": {
      "op": "MLOAD"
    },
    "1996": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1998": {
      "op": "PUSH2",
      "value": "0x99D"
    },
    "2001": {
      "op": "DUP4"
    },
    "2002": {
      "op": "CODECOPY"
    },
    "2003": {
      "op": "DUP2"
    },
    "2004": {
      "op": "MLOAD"
    },
    "2005": {
      "op": "SWAP2"
    },
    "2006": {
      "op": "MSTORE"
    },
    "2007": {
      "fn": "ERC20._burn",
      "offset": [
        2688,
        2724
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2010": {
      "op": "ADD"
    },
    "2011": {
      "fn": "ERC20._burn",
      "offset": [
        2688,
        2724
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x704"
    },
    "2014": {
      "op": "JUMP"
    },
    "2015": {
      "op": "JUMPDEST"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2020": {
      "op": "DUP1"
    },
    "2021": {
      "op": "DUP4"
    },
    "2022": {
      "op": "MSTORE"
    },
    "2023": {
      "op": "DUP4"
    },
    "2024": {
      "op": "MLOAD"
    },
    "2025": {
      "op": "DUP1"
    },
    "2026": {
      "op": "DUP3"
    },
    "2027": {
      "op": "DUP6"
    },
    "2028": {
      "op": "ADD"
    },
    "2029": {
      "op": "MSTORE"
    },
    "2030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2032": {
      "op": "JUMPDEST"
    },
    "2033": {
      "op": "DUP2"
    },
    "2034": {
      "op": "DUP2"
    },
    "2035": {
      "op": "LT"
    },
    "2036": {
      "op": "ISZERO"
    },
    "2037": {
      "op": "PUSH2",
      "value": "0x80C"
    },
    "2040": {
      "op": "JUMPI"
    },
    "2041": {
      "op": "DUP6"
    },
    "2042": {
      "op": "DUP2"
    },
    "2043": {
      "op": "ADD"
    },
    "2044": {
      "op": "DUP4"
    },
    "2045": {
      "op": "ADD"
    },
    "2046": {
      "op": "MLOAD"
    },
    "2047": {
      "op": "DUP6"
    },
    "2048": {
      "op": "DUP3"
    },
    "2049": {
      "op": "ADD"
    },
    "2050": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2052": {
      "op": "ADD"
    },
    "2053": {
      "op": "MSTORE"
    },
    "2054": {
      "op": "DUP3"
    },
    "2055": {
      "op": "ADD"
    },
    "2056": {
      "op": "PUSH2",
      "value": "0x7F0"
    },
    "2059": {
      "op": "JUMP"
    },
    "2060": {
      "op": "JUMPDEST"
    },
    "2061": {
      "op": "DUP2"
    },
    "2062": {
      "op": "DUP2"
    },
    "2063": {
      "op": "GT"
    },
    "2064": {
      "op": "ISZERO"
    },
    "2065": {
      "op": "PUSH2",
      "value": "0x81E"
    },
    "2068": {
      "op": "JUMPI"
    },
    "2069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2071": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2073": {
      "op": "DUP4"
    },
    "2074": {
      "op": "DUP8"
    },
    "2075": {
      "op": "ADD"
    },
    "2076": {
      "op": "ADD"
    },
    "2077": {
      "op": "MSTORE"
    },
    "2078": {
      "op": "JUMPDEST"
    },
    "2079": {
      "op": "POP"
    },
    "2080": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2082": {
      "op": "ADD"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2085": {
      "op": "NOT"
    },
    "2086": {
      "op": "AND"
    },
    "2087": {
      "op": "SWAP3"
    },
    "2088": {
      "op": "SWAP1"
    },
    "2089": {
      "op": "SWAP3"
    },
    "2090": {
      "op": "ADD"
    },
    "2091": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2093": {
      "op": "ADD"
    },
    "2094": {
      "op": "SWAP4"
    },
    "2095": {
      "op": "SWAP3"
    },
    "2096": {
      "op": "POP"
    },
    "2097": {
      "op": "POP"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "jump": "o",
      "op": "JUMP"
    },
    "2100": {
      "op": "JUMPDEST"
    },
    "2101": {
      "op": "DUP1"
    },
    "2102": {
      "op": "CALLDATALOAD"
    },
    "2103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2107": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2109": {
      "op": "SHL"
    },
    "2110": {
      "op": "SUB"
    },
    "2111": {
      "op": "DUP2"
    },
    "2112": {
      "op": "AND"
    },
    "2113": {
      "op": "DUP2"
    },
    "2114": {
      "op": "EQ"
    },
    "2115": {
      "op": "PUSH2",
      "value": "0x84B"
    },
    "2118": {
      "op": "JUMPI"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2121": {
      "op": "DUP1"
    },
    "2122": {
      "op": "REVERT"
    },
    "2123": {
      "op": "JUMPDEST"
    },
    "2124": {
      "op": "SWAP2"
    },
    "2125": {
      "op": "SWAP1"
    },
    "2126": {
      "op": "POP"
    },
    "2127": {
      "jump": "o",
      "op": "JUMP"
    },
    "2128": {
      "op": "JUMPDEST"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2131": {
      "op": "DUP1"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2134": {
      "op": "DUP4"
    },
    "2135": {
      "op": "DUP6"
    },
    "2136": {
      "op": "SUB"
    },
    "2137": {
      "op": "SLT"
    },
    "2138": {
      "op": "ISZERO"
    },
    "2139": {
      "op": "PUSH2",
      "value": "0x863"
    },
    "2142": {
      "op": "JUMPI"
    },
    "2143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2145": {
      "op": "DUP1"
    },
    "2146": {
      "op": "REVERT"
    },
    "2147": {
      "op": "JUMPDEST"
    },
    "2148": {
      "op": "PUSH2",
      "value": "0x86C"
    },
    "2151": {
      "op": "DUP4"
    },
    "2152": {
      "op": "PUSH2",
      "value": "0x834"
    },
    "2155": {
      "jump": "i",
      "op": "JUMP"
    },
    "2156": {
      "op": "JUMPDEST"
    },
    "2157": {
      "op": "SWAP5"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2160": {
      "op": "SWAP4"
    },
    "2161": {
      "op": "SWAP1"
    },
    "2162": {
      "op": "SWAP4"
    },
    "2163": {
      "op": "ADD"
    },
    "2164": {
      "op": "CALLDATALOAD"
    },
    "2165": {
      "op": "SWAP4"
    },
    "2166": {
      "op": "POP"
    },
    "2167": {
      "op": "POP"
    },
    "2168": {
      "op": "POP"
    },
    "2169": {
      "jump": "o",
      "op": "JUMP"
    },
    "2170": {
      "op": "JUMPDEST"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2173": {
      "op": "DUP1"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2178": {
      "op": "DUP5"
    },
    "2179": {
      "op": "DUP7"
    },
    "2180": {
      "op": "SUB"
    },
    "2181": {
      "op": "SLT"
    },
    "2182": {
      "op": "ISZERO"
    },
    "2183": {
      "op": "PUSH2",
      "value": "0x88F"
    },
    "2186": {
      "op": "JUMPI"
    },
    "2187": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2189": {
      "op": "DUP1"
    },
    "2190": {
      "op": "REVERT"
    },
    "2191": {
      "op": "JUMPDEST"
    },
    "2192": {
      "op": "PUSH2",
      "value": "0x898"
    },
    "2195": {
      "op": "DUP5"
    },
    "2196": {
      "op": "PUSH2",
      "value": "0x834"
    },
    "2199": {
      "jump": "i",
      "op": "JUMP"
    },
    "2200": {
      "op": "JUMPDEST"
    },
    "2201": {
      "op": "SWAP3"
    },
    "2202": {
      "op": "POP"
    },
    "2203": {
      "op": "PUSH2",
      "value": "0x8A6"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2208": {
      "op": "DUP6"
    },
    "2209": {
      "op": "ADD"
    },
    "2210": {
      "op": "PUSH2",
      "value": "0x834"
    },
    "2213": {
      "jump": "i",
      "op": "JUMP"
    },
    "2214": {
      "op": "JUMPDEST"
    },
    "2215": {
      "op": "SWAP2"
    },
    "2216": {
      "op": "POP"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2219": {
      "op": "DUP5"
    },
    "2220": {
      "op": "ADD"
    },
    "2221": {
      "op": "CALLDATALOAD"
    },
    "2222": {
      "op": "SWAP1"
    },
    "2223": {
      "op": "POP"
    },
    "2224": {
      "op": "SWAP3"
    },
    "2225": {
      "op": "POP"
    },
    "2226": {
      "op": "SWAP3"
    },
    "2227": {
      "op": "POP"
    },
    "2228": {
      "op": "SWAP3"
    },
    "2229": {
      "jump": "o",
      "op": "JUMP"
    },
    "2230": {
      "op": "JUMPDEST"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2233": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2235": {
      "op": "DUP3"
    },
    "2236": {
      "op": "DUP5"
    },
    "2237": {
      "op": "SUB"
    },
    "2238": {
      "op": "SLT"
    },
    "2239": {
      "op": "ISZERO"
    },
    "2240": {
      "op": "PUSH2",
      "value": "0x8C8"
    },
    "2243": {
      "op": "JUMPI"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2246": {
      "op": "DUP1"
    },
    "2247": {
      "op": "REVERT"
    },
    "2248": {
      "op": "JUMPDEST"
    },
    "2249": {
      "op": "PUSH2",
      "value": "0x496"
    },
    "2252": {
      "op": "DUP3"
    },
    "2253": {
      "op": "PUSH2",
      "value": "0x834"
    },
    "2256": {
      "jump": "i",
      "op": "JUMP"
    },
    "2257": {
      "op": "JUMPDEST"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2262": {
      "op": "DUP3"
    },
    "2263": {
      "op": "DUP5"
    },
    "2264": {
      "op": "SUB"
    },
    "2265": {
      "op": "SLT"
    },
    "2266": {
      "op": "ISZERO"
    },
    "2267": {
      "op": "PUSH2",
      "value": "0x8E3"
    },
    "2270": {
      "op": "JUMPI"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2273": {
      "op": "DUP1"
    },
    "2274": {
      "op": "REVERT"
    },
    "2275": {
      "op": "JUMPDEST"
    },
    "2276": {
      "op": "POP"
    },
    "2277": {
      "op": "CALLDATALOAD"
    },
    "2278": {
      "op": "SWAP2"
    },
    "2279": {
      "op": "SWAP1"
    },
    "2280": {
      "op": "POP"
    },
    "2281": {
      "jump": "o",
      "op": "JUMP"
    },
    "2282": {
      "op": "JUMPDEST"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2285": {
      "op": "DUP1"
    },
    "2286": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2288": {
      "op": "DUP4"
    },
    "2289": {
      "op": "DUP6"
    },
    "2290": {
      "op": "SUB"
    },
    "2291": {
      "op": "SLT"
    },
    "2292": {
      "op": "ISZERO"
    },
    "2293": {
      "op": "PUSH2",
      "value": "0x8FD"
    },
    "2296": {
      "op": "JUMPI"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2299": {
      "op": "DUP1"
    },
    "2300": {
      "op": "REVERT"
    },
    "2301": {
      "op": "JUMPDEST"
    },
    "2302": {
      "op": "PUSH2",
      "value": "0x906"
    },
    "2305": {
      "op": "DUP4"
    },
    "2306": {
      "op": "PUSH2",
      "value": "0x834"
    },
    "2309": {
      "jump": "i",
      "op": "JUMP"
    },
    "2310": {
      "op": "JUMPDEST"
    },
    "2311": {
      "op": "SWAP2"
    },
    "2312": {
      "op": "POP"
    },
    "2313": {
      "op": "PUSH2",
      "value": "0x914"
    },
    "2316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2318": {
      "op": "DUP5"
    },
    "2319": {
      "op": "ADD"
    },
    "2320": {
      "op": "PUSH2",
      "value": "0x834"
    },
    "2323": {
      "jump": "i",
      "op": "JUMP"
    },
    "2324": {
      "op": "JUMPDEST"
    },
    "2325": {
      "op": "SWAP1"
    },
    "2326": {
      "op": "POP"
    },
    "2327": {
      "op": "SWAP3"
    },
    "2328": {
      "op": "POP"
    },
    "2329": {
      "op": "SWAP3"
    },
    "2330": {
      "op": "SWAP1"
    },
    "2331": {
      "op": "POP"
    },
    "2332": {
      "jump": "o",
      "op": "JUMP"
    },
    "2333": {
      "op": "JUMPDEST"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2336": {
      "op": "DUP2"
    },
    "2337": {
      "op": "DUP2"
    },
    "2338": {
      "op": "SHR"
    },
    "2339": {
      "op": "SWAP1"
    },
    "2340": {
      "op": "DUP3"
    },
    "2341": {
      "op": "AND"
    },
    "2342": {
      "op": "DUP1"
    },
    "2343": {
      "op": "PUSH2",
      "value": "0x931"
    },
    "2346": {
      "op": "JUMPI"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2349": {
      "op": "DUP3"
    },
    "2350": {
      "op": "AND"
    },
    "2351": {
      "op": "SWAP2"
    },
    "2352": {
      "op": "POP"
    },
    "2353": {
      "op": "JUMPDEST"
    },
    "2354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2356": {
      "op": "DUP3"
    },
    "2357": {
      "op": "LT"
    },
    "2358": {
      "op": "DUP2"
    },
    "2359": {
      "op": "SUB"
    },
    "2360": {
      "op": "PUSH2",
      "value": "0x951"
    },
    "2363": {
      "op": "JUMPI"
    },
    "2364": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2371": {
      "op": "SHL"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2374": {
      "op": "MSTORE"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2379": {
      "op": "MSTORE"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2384": {
      "op": "REVERT"
    },
    "2385": {
      "op": "JUMPDEST"
    },
    "2386": {
      "op": "POP"
    },
    "2387": {
      "op": "SWAP2"
    },
    "2388": {
      "op": "SWAP1"
    },
    "2389": {
      "op": "POP"
    },
    "2390": {
      "jump": "o",
      "op": "JUMP"
    },
    "2391": {
      "op": "JUMPDEST"
    },
    "2392": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2399": {
      "op": "SHL"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2402": {
      "op": "MSTORE"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2407": {
      "op": "MSTORE"
    },
    "2408": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2412": {
      "op": "REVERT"
    },
    "2413": {
      "op": "JUMPDEST"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2416": {
      "op": "DUP3"
    },
    "2417": {
      "op": "DUP3"
    },
    "2418": {
      "op": "LT"
    },
    "2419": {
      "op": "ISZERO"
    },
    "2420": {
      "op": "PUSH2",
      "value": "0x97F"
    },
    "2423": {
      "op": "JUMPI"
    },
    "2424": {
      "op": "PUSH2",
      "value": "0x97F"
    },
    "2427": {
      "op": "PUSH2",
      "value": "0x957"
    },
    "2430": {
      "jump": "i",
      "op": "JUMP"
    },
    "2431": {
      "op": "JUMPDEST"
    },
    "2432": {
      "op": "POP"
    },
    "2433": {
      "op": "SUB"
    },
    "2434": {
      "op": "SWAP1"
    },
    "2435": {
      "jump": "o",
      "op": "JUMP"
    },
    "2436": {
      "op": "JUMPDEST"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2439": {
      "op": "DUP3"
    },
    "2440": {
      "op": "NOT"
    },
    "2441": {
      "op": "DUP3"
    },
    "2442": {
      "op": "GT"
    },
    "2443": {
      "op": "ISZERO"
    },
    "2444": {
      "op": "PUSH2",
      "value": "0x997"
    },
    "2447": {
      "op": "JUMPI"
    },
    "2448": {
      "op": "PUSH2",
      "value": "0x997"
    },
    "2451": {
      "op": "PUSH2",
      "value": "0x957"
    },
    "2454": {
      "jump": "i",
      "op": "JUMP"
    },
    "2455": {
      "op": "JUMPDEST"
    },
    "2456": {
      "op": "POP"
    },
    "2457": {
      "op": "ADD"
    },
    "2458": {
      "op": "SWAP1"
    },
    "2459": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "cb59e8e852e01c97abe5dccb74e788d16b088dad",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity >=0.6.0 <0.9.0;\n\ncontract ERC20 {\n    uint256 public totalSupply;\n    string public name;\n    string public symbol;\n\n    event Transfer(address indexed _from, address indexed _to, uint256 value);\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    mapping(address => uint256) public balanceOf;\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    constructor(string memory _name, string memory _symbol) {\n        name = _name;\n        symbol = _symbol;\n\n        _mint(msg.sender, 100e18);\n    }\n\n    function decimals() external pure returns (uint8) {\n        return 18;\n    }\n\n    function transfer(address recipient, uint256 amount)\n        external\n        returns (bool)\n    {\n        return _transfer(msg.sender, recipient, amount);\n    }\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public returns (bool) {\n        uint256 currentAllowance = allowance[sender][msg.sender];\n\n        require(\n            currentAllowance >= amount,\n            \"ERC20: transfer amount exceeds allowance\"\n        );\n\n        allowance[sender][msg.sender] = currentAllowance - amount;\n\n        emit Approval(sender, msg.sender, amount);\n\n        return _transfer(sender, recipient, amount);\n    }\n\n    function approve(address spender, uint256 amount) external returns (bool) {\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        allowance[msg.sender][spender] = amount;\n\n        emit Approval(msg.sender, spender, amount);\n        return true;\n    }\n\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) private returns (bool) {\n        require(recipient != address(0), \"ERC20: transfer to zero address\");\n        emit Transfer(sender, recipient, amount);\n\n        uint256 senderBalance = balanceOf[sender];\n\n        require(\n            senderBalance >= amount,\n            \"ERC20: transfer amount exceeds balance\"\n        );\n\n        balanceOf[sender] = senderBalance - amount;\n        balanceOf[recipient] += amount;\n\n        return true;\n    }\n\n    function _mint(address to, uint256 amount) internal {\n        require(to != address(0), \"ERC20: mint to the zero address\");\n\n        totalSupply += amount;\n        balanceOf[to] += amount;\n\n        emit Transfer(address(0), to, amount);\n    }\n\n    function _burn(address burner, uint256 amount) internal {\n        require(burner != address(0), \"ERC20: burn from the zero address\");\n\n        totalSupply -= amount;\n        balanceOf[burner] -= amount;\n        emit Transfer(burner, address(0), amount);\n    }\n\n    function deposit(uint256 amount) public payable {\n        _mint(msg.sender, amount);\n        emit Transfer(msg.sender, address(this), amount);\n    }\n\n    function redeem(uint256 amount) external payable {\n        transferFrom(msg.sender, msg.sender, amount);\n        _burn(msg.sender, amount);\n    }\n}\n",
  "sourceMap": "64:2974:0:-:0;;;482:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;548:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;570:16:0;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;597:25:0;603:10;615:6;597:5;:25::i;:::-;482:147;;64:2974;;2224:242;-1:-1:-1;;;;;2294:16:0;;2286:60;;;;-1:-1:-1;;;2286:60:0;;1805:2:1;2286:60:0;;;1787:21:1;1844:2;1824:18;;;1817:30;1883:33;1863:18;;;1856:61;1934:18;;2286:60:0;;;;;;;;2372:6;2357:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;2388:13:0;;;;;;:9;:13;;;;;:23;;2405:6;;2388:13;:23;;2405:6;;2388:23;:::i;:::-;;;;-1:-1:-1;;2427:32:0;;2339:25:1;;;-1:-1:-1;;;;;2427:32:0;;;2444:1;;2427:32;;2327:2:1;2312:18;2427:32:0;;;;;;;2224:242;;:::o;64:2974::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;64:2974:0;;;-1:-1:-1;64:2974:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:1;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:1;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:1:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:1;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1963:225::-;2003:3;2034:1;2030:6;2027:1;2024:13;2021:136;;;2079:10;2074:3;2070:20;2067:1;2060:31;2114:4;2111:1;2104:15;2142:4;2139:1;2132:15;2021:136;-1:-1:-1;2173:9:1;;1963:225::o;2375:380::-;2454:1;2450:12;;;;2497;;;2518:61;;2572:4;2564:6;2560:17;2550:27;;2518:61;2625:2;2617:6;2614:14;2594:18;2591:38;2588:161;;2671:10;2666:3;2662:20;2659:1;2652:31;2706:4;2703:1;2696:15;2734:4;2731:1;2724:15;2588:161;;2375:380;;;:::o;:::-;64:2974:0;;;;;;",
  "sourcePath": "contracts/ERC20.sol",
  "type": "contract"
}